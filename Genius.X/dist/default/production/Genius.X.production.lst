

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Jul 02 17:21:52 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4520 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataCOMRAM
    68  000D8E                     __pidataCOMRAM:
    69                           	callstack 0
    70                           
    71                           ;initializer for _displayNumber
    72  000D8E  003F               	dw	63
    73  000D90  0006               	dw	6
    74  000D92  005B               	dw	91
    75  000D94  004F               	dw	79
    76  000D96  0066               	dw	102
    77  000D98  006D               	dw	109
    78  000D9A  007D               	dw	125
    79  000D9C  0007               	dw	7
    80  000D9E  007F               	dw	127
    81  000DA0  0067               	dw	103
    82                           
    83                           ;initializer for _qnt_max
    84  000DA2  0008               	dw	8
    85                           
    86                           ;initializer for _control_input
    87  000DA4  0001               	dw	1
    88                           
    89                           ;initializer for _delay
    90  000DA6  0320               	dw	800
    91  0000                     _PORTBbits	set	3969
    92  0000                     _INTCON2bits	set	4081
    93  0000                     _TMR0L	set	4054
    94  0000                     _TMR0H	set	4055
    95  0000                     _PORTAbits	set	3968
    96  0000                     _PORTCbits	set	3970
    97                           
    98                           	psect	nvCOMRAM
    99  000065                     __pnvCOMRAM:
   100                           	callstack 0
   101  000065                     _seed:
   102                           	callstack 0
   103  000065                     	ds	4
   104  0000                     _TMR0	set	4054
   105  0000                     _PORTD	set	3971
   106  0000                     _TRISA	set	3986
   107  0000                     _TRISB	set	3987
   108  0000                     _CCPR1L	set	4030
   109  0000                     _PR2	set	4043
   110  0000                     _T0CONbits	set	4053
   111  0000                     _ADCON1	set	4033
   112  0000                     _T2CON	set	4042
   113  0000                     _CCP1CONbits	set	4029
   114  0000                     _TRISD	set	3989
   115  0000                     _TRISC	set	3988
   116  0000                     _INTCON3bits	set	4080
   117  0000                     _INTCONbits	set	4082
   118                           
   119                           ; #config settings
   120                           
   121                           	psect	cinit
   122  000CB8                     __pcinit:
   123                           	callstack 0
   124  000CB8                     start_initialization:
   125                           	callstack 0
   126  000CB8                     __initialization:
   127                           	callstack 0
   128                           
   129                           ; Initialize objects allocated to COMRAM (26 bytes)
   130                           ; load TBLPTR registers with __pidataCOMRAM
   131  000CB8  0E8E               	movlw	low __pidataCOMRAM
   132  000CBA  6EF6               	movwf	tblptrl,c
   133  000CBC  0E0D               	movlw	high __pidataCOMRAM
   134  000CBE  6EF7               	movwf	tblptrh,c
   135  000CC0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   136  000CC2  6EF8               	movwf	tblptru,c
   137  000CC4  EE00  F04B         	lfsr	0,__pdataCOMRAM
   138  000CC8  EE10 F01A          	lfsr	1,26
   139  000CCC                     copy_data0:
   140  000CCC  0009               	tblrd		*+
   141  000CCE  CFF5 FFEE          	movff	tablat,postinc0
   142  000CD2  50E5               	movf	postdec1,w,c
   143  000CD4  50E1               	movf	fsr1l,w,c
   144  000CD6  E1FA               	bnz	copy_data0
   145                           
   146                           ; Clear objects allocated to BANK0 (62 bytes)
   147  000CD8  EE00  F080         	lfsr	0,__pbssBANK0
   148  000CDC  0E3E               	movlw	62
   149  000CDE                     clear_0:
   150  000CDE  6AEE               	clrf	postinc0,c
   151  000CE0  06E8               	decf	wreg,f,c
   152  000CE2  E1FD               	bnz	clear_0
   153                           
   154                           ; Clear objects allocated to COMRAM (28 bytes)
   155  000CE4  EE00  F02F         	lfsr	0,__pbssCOMRAM
   156  000CE8  0E1C               	movlw	28
   157  000CEA                     clear_1:
   158  000CEA  6AEE               	clrf	postinc0,c
   159  000CEC  06E8               	decf	wreg,f,c
   160  000CEE  E1FD               	bnz	clear_1
   161  000CF0                     end_of_initialization:
   162                           	callstack 0
   163  000CF0                     __end_of__initialization:
   164                           	callstack 0
   165  000CF0  9069               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   166  000CF2  9269               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   167  000CF4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   168  000CF6  6EF8               	movwf	tblptru,c
   169  000CF8  0100               	movlb	0
   170  000CFA  EF47  F002         	goto	_main	;jump to C main() function
   171                           
   172                           	psect	bssCOMRAM
   173  00002F                     __pbssCOMRAM:
   174                           	callstack 0
   175  00002F                     _wait_timer:
   176                           	callstack 0
   177  00002F                     	ds	2
   178  000031                     _start:
   179                           	callstack 0
   180  000031                     	ds	2
   181  000033                     _status_response:
   182                           	callstack 0
   183  000033                     	ds	2
   184  000035                     _index_input:
   185                           	callstack 0
   186  000035                     	ds	2
   187  000037                     _count_timer:
   188                           	callstack 0
   189  000037                     	ds	2
   190  000039                     _its_waiting:
   191                           	callstack 0
   192  000039                     	ds	2
   193  00003B                     _on_red:
   194                           	callstack 0
   195  00003B                     	ds	2
   196  00003D                     _on_green:
   197                           	callstack 0
   198  00003D                     	ds	2
   199  00003F                     _on_yellow:
   200                           	callstack 0
   201  00003F                     	ds	2
   202  000041                     _on_blue:
   203                           	callstack 0
   204  000041                     	ds	2
   205  000043                     _now:
   206                           	callstack 0
   207  000043                     	ds	2
   208  000045                     _qnt:
   209                           	callstack 0
   210  000045                     	ds	2
   211  000047                     _disp:
   212                           	callstack 0
   213  000047                     	ds	2
   214  000049                     _dispValue:
   215                           	callstack 0
   216  000049                     	ds	2
   217                           
   218                           	psect	dataCOMRAM
   219  00004B                     __pdataCOMRAM:
   220                           	callstack 0
   221  00004B                     _displayNumber:
   222                           	callstack 0
   223  00004B                     	ds	20
   224  00005F                     _qnt_max:
   225                           	callstack 0
   226  00005F                     	ds	2
   227  000061                     _control_input:
   228                           	callstack 0
   229  000061                     	ds	2
   230  000063                     _delay:
   231                           	callstack 0
   232  000063                     	ds	2
   233                           
   234                           	psect	bssBANK0
   235  000080                     __pbssBANK0:
   236                           	callstack 0
   237  000080                     _sequence:
   238                           	callstack 0
   239  000080                     	ds	62
   240                           
   241                           	psect	cstackCOMRAM
   242  000001                     __pcstackCOMRAM:
   243                           	callstack 0
   244  000001                     ?___awdiv:
   245                           	callstack 0
   246  000001                     ?___awmod:
   247                           	callstack 0
   248  000001                     ___awdiv@dividend:
   249                           	callstack 0
   250  000001                     ___awmod@dividend:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x0
   254  000001                     	ds	2
   255  000003                     ___awdiv@divisor:
   256                           	callstack 0
   257  000003                     ___awmod@divisor:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x2
   261  000003                     	ds	2
   262  000005                     ___awdiv@counter:
   263                           	callstack 0
   264  000005                     ___awmod@counter:
   265                           	callstack 0
   266                           
   267                           ; 1 bytes @ 0x4
   268  000005                     	ds	1
   269  000006                     ___awdiv@sign:
   270                           	callstack 0
   271  000006                     ___awmod@sign:
   272                           	callstack 0
   273                           
   274                           ; 1 bytes @ 0x5
   275  000006                     	ds	1
   276  000007                     ___awdiv@quotient:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x6
   280  000007                     	ds	2
   281  000009                     ??_isr:
   282                           
   283                           ; 1 bytes @ 0x8
   284  000009                     	ds	4
   285  00000D                     ??_defeatFunc:
   286  00000D                     ??_winFunc:
   287  00000D                     ??_selectDifficulty:
   288  00000D                     ?___lmul:
   289                           	callstack 0
   290  00000D                     delay_ms@milliseconds:
   291                           	callstack 0
   292  00000D                     receiveInput@qnt:
   293                           	callstack 0
   294  00000D                     srand@s:
   295                           	callstack 0
   296  00000D                     ___lmul@multiplier:
   297                           	callstack 0
   298                           
   299                           ; 4 bytes @ 0xC
   300  00000D                     	ds	2
   301  00000F                     ??_srand:
   302  00000F                     ??_delay_ms:
   303  00000F                     winFunc@i:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0xE
   307  00000F                     	ds	2
   308  000011                     ___lmul@multiplicand:
   309                           	callstack 0
   310                           
   311                           ; 4 bytes @ 0x10
   312  000011                     	ds	4
   313  000015                     ___lmul@product:
   314                           	callstack 0
   315                           
   316                           ; 4 bytes @ 0x14
   317  000015                     	ds	4
   318  000019                     ?_rand:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x18
   322  000019                     	ds	2
   323  00001B                     ??_rand:
   324                           
   325                           ; 1 bytes @ 0x1A
   326  00001B                     	ds	4
   327  00001F                     SequenceGenerator@start:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x1E
   331  00001F                     	ds	2
   332  000021                     SequenceGenerator@qnt:
   333                           	callstack 0
   334                           
   335                           ; 2 bytes @ 0x20
   336  000021                     	ds	2
   337  000023                     SequenceGenerator@delay:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x22
   341  000023                     	ds	2
   342  000025                     ??_SequenceGenerator:
   343                           
   344                           ; 1 bytes @ 0x24
   345  000025                     	ds	2
   346  000027                     SequenceGenerator@r:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x26
   350  000027                     	ds	2
   351  000029                     SequenceGenerator@i:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x28
   355  000029                     	ds	2
   356  00002B                     SequenceGenerator@j:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x2A
   360  00002B                     	ds	2
   361  00002D                     ??_main:
   362                           
   363                           ; 1 bytes @ 0x2C
   364  00002D                     	ds	2
   365                           
   366 ;;
   367 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   368 ;;
   369 ;; *************** function _main *****************
   370 ;; Defined at:
   371 ;;		line 220 in file "main.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;		None
   374 ;; Auto vars:     Size  Location     Type
   375 ;;		None
   376 ;; Return value:  Size  Location     Type
   377 ;;                  1    wreg      void 
   378 ;; Registers used:
   379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   380 ;; Tracked objects:
   381 ;;		On entry : 0/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   385 ;;      Params:         0       0       0       0       0       0       0
   386 ;;      Locals:         0       0       0       0       0       0       0
   387 ;;      Temps:          2       0       0       0       0       0       0
   388 ;;      Totals:         2       0       0       0       0       0       0
   389 ;;Total ram usage:        2 bytes
   390 ;; Hardware stack levels required when called: 5
   391 ;; This function calls:
   392 ;;		_SequenceGenerator
   393 ;;		_defeatFunc
   394 ;;		_receiveInput
   395 ;;		_selectDifficulty
   396 ;;		_srand
   397 ;;		_winFunc
   398 ;; This function is called by:
   399 ;;		Startup code after reset
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           	psect	text0
   404  00048E                     __ptext0:
   405                           	callstack 0
   406  00048E                     _main:
   407                           	callstack 26
   408  00048E                     
   409                           ;main.c: 222:     ADCON1 = 0x0F;
   410  00048E  0E0F               	movlw	15
   411  000490  6EC1               	movwf	193,c	;volatile
   412                           
   413                           ;main.c: 223:     TRISB = 0x0F;
   414  000492  0E0F               	movlw	15
   415  000494  6E93               	movwf	147,c	;volatile
   416  000496                     
   417                           ;main.c: 224:     TRISA = 0xFF;
   418  000496  6892               	setf	146,c	;volatile
   419                           
   420                           ;main.c: 225:     TRISC = 0x00;
   421  000498  0E00               	movlw	0
   422  00049A  6E94               	movwf	148,c	;volatile
   423                           
   424                           ;main.c: 226:     TRISD = 0x00;
   425  00049C  0E00               	movlw	0
   426  00049E  6E95               	movwf	149,c	;volatile
   427  0004A0                     
   428                           ;main.c: 228:     T0CONbits.T08BIT = 0;
   429  0004A0  9CD5               	bcf	213,6,c	;volatile
   430  0004A2                     
   431                           ;main.c: 229:     T0CONbits.T0CS = 0;
   432  0004A2  9AD5               	bcf	213,5,c	;volatile
   433  0004A4                     
   434                           ;main.c: 230:     T0CONbits.PSA = 0;
   435  0004A4  96D5               	bcf	213,3,c	;volatile
   436                           
   437                           ;main.c: 231:     T0CONbits.T0PS = 0;
   438  0004A6  0EF8               	movlw	-8
   439  0004A8  16D5               	andwf	213,f,c	;volatile
   440  0004AA                     
   441                           ;main.c: 232:     T0CONbits.TMR0ON = 1;
   442  0004AA  8ED5               	bsf	213,7,c	;volatile
   443                           
   444                           ;main.c: 233:     TMR0H = 248;
   445  0004AC  0EF8               	movlw	248
   446  0004AE  6ED7               	movwf	215,c	;volatile
   447                           
   448                           ;main.c: 234:     TMR0L = 48;
   449  0004B0  0E30               	movlw	48
   450  0004B2  6ED6               	movwf	214,c	;volatile
   451  0004B4                     
   452                           ;main.c: 235:     INTCONbits.TMR0IF = 0;
   453  0004B4  94F2               	bcf	242,2,c	;volatile
   454  0004B6                     
   455                           ;main.c: 236:     INTCONbits.TMR0IE = 1;
   456  0004B6  8AF2               	bsf	242,5,c	;volatile
   457  0004B8                     
   458                           ;main.c: 237:     INTCONbits.GIE = 1;
   459  0004B8  8EF2               	bsf	242,7,c	;volatile
   460  0004BA                     
   461                           ;main.c: 240:     INTCON3bits.INT1E = 1;
   462  0004BA  86F0               	bsf	240,3,c	;volatile
   463  0004BC                     
   464                           ;main.c: 241:     INTCON2bits.INTEDG1 = 0;
   465  0004BC  9AF1               	bcf	241,5,c	;volatile
   466  0004BE                     
   467                           ;main.c: 242:     INTCONbits.GIE = 1;
   468  0004BE  8EF2               	bsf	242,7,c	;volatile
   469                           
   470                           ;main.c: 245:     PR2 = 0;
   471  0004C0  0E00               	movlw	0
   472  0004C2  6ECB               	movwf	203,c	;volatile
   473                           
   474                           ;main.c: 246:     CCPR1L = 0;
   475  0004C4  0E00               	movlw	0
   476  0004C6  6EBE               	movwf	190,c	;volatile
   477                           
   478                           ;main.c: 247:     CCP1CONbits.DC1B = 0;
   479  0004C8  0ECF               	movlw	-49
   480  0004CA  16BD               	andwf	189,f,c	;volatile
   481                           
   482                           ;main.c: 248:     CCP1CONbits.CCP1M = 0x0C;
   483  0004CC  50BD               	movf	189,w,c	;volatile
   484  0004CE  0BF0               	andlw	-16
   485  0004D0  090C               	iorlw	12
   486  0004D2  6EBD               	movwf	189,c	;volatile
   487                           
   488                           ;main.c: 249:     T2CON = 0x06;
   489  0004D4  0E06               	movlw	6
   490  0004D6  6ECA               	movwf	202,c	;volatile
   491  0004D8                     
   492                           ;main.c: 251:     srand(TMR0);
   493  0004D8  CFD6 F00D          	movff	4054,srand@s	;volatile
   494  0004DC  CFD7 F00E          	movff	4055,srand@s+1	;volatile
   495  0004E0  ECB4  F006         	call	_srand	;wreg free
   496  0004E4                     
   497                           ;main.c: 253:     PORTCbits.RC0 = 0;
   498  0004E4  9082               	bcf	130,0,c	;volatile
   499  0004E6                     
   500                           ;main.c: 254:     PORTCbits.RC3 = 0;
   501  0004E6  9682               	bcf	130,3,c	;volatile
   502  0004E8                     
   503                           ;main.c: 255:     PORTCbits.RC4 = 0;
   504  0004E8  9882               	bcf	130,4,c	;volatile
   505  0004EA                     
   506                           ;main.c: 256:     PORTCbits.RC1 = 0;
   507  0004EA  9282               	bcf	130,1,c	;volatile
   508  0004EC                     
   509                           ;main.c: 258:     PORTBbits.RB4 = 0;
   510  0004EC  9881               	bcf	129,4,c	;volatile
   511  0004EE                     
   512                           ;main.c: 259:     PORTBbits.RB5 = 0;
   513  0004EE  9A81               	bcf	129,5,c	;volatile
   514  0004F0                     
   515                           ;main.c: 260:     PORTBbits.RB6 = 0;
   516  0004F0  9C81               	bcf	129,6,c	;volatile
   517  0004F2                     
   518                           ;main.c: 261:     PORTBbits.RB7 = 0;
   519  0004F2  9E81               	bcf	129,7,c	;volatile
   520  0004F4                     l1654:
   521                           
   522                           ;main.c: 264:         if (start == 0) {
   523  0004F4  5031               	movf	_start^0,w,c
   524  0004F6  1032               	iorwf	(_start+1)^0,w,c
   525  0004F8  A4D8               	btfss	status,2,c
   526  0004FA  EF81  F002         	goto	u851
   527  0004FE  EF83  F002         	goto	u850
   528  000502                     u851:
   529  000502  EF9F  F002         	goto	l1672
   530  000506                     u850:
   531  000506                     
   532                           ;main.c: 265:             PORTCbits.RC0 = 1;
   533  000506  8082               	bsf	130,0,c	;volatile
   534                           
   535                           ;main.c: 266:             PORTCbits.RC3 = 1;
   536  000508  8682               	bsf	130,3,c	;volatile
   537                           
   538                           ;main.c: 267:             PORTCbits.RC4 = 1;
   539  00050A  8882               	bsf	130,4,c	;volatile
   540                           
   541                           ;main.c: 268:             PORTCbits.RC1 = 1;
   542  00050C  8282               	bsf	130,1,c	;volatile
   543  00050E                     
   544                           ;main.c: 269:             _delay((unsigned long)((300)*(16000000/4000.0)));
   545  00050E  0E07               	movlw	7
   546  000510  6E2E               	movwf	(??_main+1)^0,c
   547  000512  0E17               	movlw	23
   548  000514  6E2D               	movwf	??_main^0,c
   549  000516  0E6A               	movlw	106
   550  000518                     u1227:
   551  000518  2EE8               	decfsz	wreg,f,c
   552  00051A  D7FE               	bra	u1227
   553  00051C  2E2D               	decfsz	??_main^0,f,c
   554  00051E  D7FC               	bra	u1227
   555  000520  2E2E               	decfsz	(??_main+1)^0,f,c
   556  000522  D7FA               	bra	u1227
   557  000524  D000               	nop2	
   558  000526                     
   559                           ;main.c: 270:             PORTCbits.RC0 = 0;
   560  000526  9082               	bcf	130,0,c	;volatile
   561  000528                     
   562                           ;main.c: 271:             PORTCbits.RC3 = 0;
   563  000528  9682               	bcf	130,3,c	;volatile
   564  00052A                     
   565                           ;main.c: 272:             PORTCbits.RC4 = 0;
   566  00052A  9882               	bcf	130,4,c	;volatile
   567  00052C                     
   568                           ;main.c: 273:             PORTCbits.RC1 = 0;
   569  00052C  9282               	bcf	130,1,c	;volatile
   570  00052E                     
   571                           ;main.c: 274:             selectDifficulty();
   572  00052E  EC10  F004         	call	_selectDifficulty	;wreg free
   573  000532                     
   574                           ;main.c: 275:             qnt = 1;
   575  000532  0E00               	movlw	0
   576  000534  6E46               	movwf	(_qnt+1)^0,c
   577  000536  0E01               	movlw	1
   578  000538  6E45               	movwf	_qnt^0,c
   579                           
   580                           ;main.c: 276:         }
   581  00053A  EF7A  F002         	goto	l1654
   582  00053E                     l1672:
   583  00053E  0431               	decf	_start^0,w,c
   584  000540  1032               	iorwf	(_start+1)^0,w,c
   585  000542  A4D8               	btfss	status,2,c
   586  000544  EFA6  F002         	goto	u861
   587  000548  EFA8  F002         	goto	u860
   588  00054C                     u861:
   589  00054C  EF19  F003         	goto	l1712
   590  000550                     u860:
   591  000550                     
   592                           ;main.c: 278:             _delay((unsigned long)((500)*(16000000/4000.0)));
   593  000550  0E0B               	movlw	11
   594  000552  6E2E               	movwf	(??_main+1)^0,c
   595  000554  0E26               	movlw	38
   596  000556  6E2D               	movwf	??_main^0,c
   597  000558  0E5E               	movlw	94
   598  00055A                     u1237:
   599  00055A  2EE8               	decfsz	wreg,f,c
   600  00055C  D7FE               	bra	u1237
   601  00055E  2E2D               	decfsz	??_main^0,f,c
   602  000560  D7FC               	bra	u1237
   603  000562  2E2E               	decfsz	(??_main+1)^0,f,c
   604  000564  D7FA               	bra	u1237
   605  000566                     
   606                           ;main.c: 279:             dispValue = qnt;
   607  000566  C045  F049         	movff	_qnt,_dispValue
   608  00056A  C046  F04A         	movff	_qnt+1,_dispValue+1
   609  00056E                     
   610                           ;main.c: 280:             SequenceGenerator(now, qnt, delay);
   611  00056E  C043  F01F         	movff	_now,SequenceGenerator@start
   612  000572  C044  F020         	movff	_now+1,SequenceGenerator@start+1
   613  000576  C045  F021         	movff	_qnt,SequenceGenerator@qnt
   614  00057A  C046  F022         	movff	_qnt+1,SequenceGenerator@qnt+1
   615  00057E  C063  F023         	movff	_delay,SequenceGenerator@delay
   616  000582  C064  F024         	movff	_delay+1,SequenceGenerator@delay+1
   617  000586  EC41  F003         	call	_SequenceGenerator	;wreg free
   618  00058A                     
   619                           ;main.c: 281:             control_input = 0;
   620  00058A  0E00               	movlw	0
   621  00058C  6E62               	movwf	(_control_input+1)^0,c
   622  00058E  0E00               	movlw	0
   623  000590  6E61               	movwf	_control_input^0,c
   624  000592                     
   625                           ;main.c: 282:             its_waiting = 1;
   626  000592  0E00               	movlw	0
   627  000594  6E3A               	movwf	(_its_waiting+1)^0,c
   628  000596  0E01               	movlw	1
   629  000598  6E39               	movwf	_its_waiting^0,c
   630  00059A                     
   631                           ;main.c: 283:             receiveInput(qnt);
   632  00059A  C045  F00D         	movff	_qnt,receiveInput@qnt
   633  00059E  C046  F00E         	movff	_qnt+1,receiveInput@qnt+1
   634  0005A2  EC9A  F006         	call	_receiveInput	;wreg free
   635  0005A6                     
   636                           ;main.c: 284:             its_waiting = 0;
   637  0005A6  0E00               	movlw	0
   638  0005A8  6E3A               	movwf	(_its_waiting+1)^0,c
   639  0005AA  0E00               	movlw	0
   640  0005AC  6E39               	movwf	_its_waiting^0,c
   641  0005AE                     
   642                           ;main.c: 285:             control_input = 1;
   643  0005AE  0E00               	movlw	0
   644  0005B0  6E62               	movwf	(_control_input+1)^0,c
   645  0005B2  0E01               	movlw	1
   646  0005B4  6E61               	movwf	_control_input^0,c
   647  0005B6                     
   648                           ;main.c: 286:             index_input = 0;
   649  0005B6  0E00               	movlw	0
   650  0005B8  6E36               	movwf	(_index_input+1)^0,c
   651  0005BA  0E00               	movlw	0
   652  0005BC  6E35               	movwf	_index_input^0,c
   653  0005BE                     
   654                           ;main.c: 287:             if(status_response == 0){
   655  0005BE  5033               	movf	_status_response^0,w,c
   656  0005C0  1034               	iorwf	(_status_response+1)^0,w,c
   657  0005C2  A4D8               	btfss	status,2,c
   658  0005C4  EFE6  F002         	goto	u871
   659  0005C8  EFE8  F002         	goto	u870
   660  0005CC                     u871:
   661  0005CC  EF11  F003         	goto	l1708
   662  0005D0                     u870:
   663  0005D0                     
   664                           ;main.c: 288:                 if(qnt == qnt_max) {
   665  0005D0  505F               	movf	_qnt_max^0,w,c
   666  0005D2  1845               	xorwf	_qnt^0,w,c
   667  0005D4  E107               	bnz	u881
   668  0005D6  5060               	movf	(_qnt_max+1)^0,w,c
   669  0005D8  1846               	xorwf	(_qnt+1)^0,w,c
   670  0005DA  A4D8               	btfss	status,2,c
   671  0005DC  EFF2  F002         	goto	u881
   672  0005E0  EFF4  F002         	goto	u880
   673  0005E4                     u881:
   674  0005E4  EFFA  F002         	goto	l1700
   675  0005E8                     u880:
   676  0005E8                     
   677                           ;main.c: 289:                     winFunc();
   678  0005E8  ECA4  F004         	call	_winFunc	;wreg free
   679  0005EC                     
   680                           ;main.c: 290:                     start = 2;
   681  0005EC  0E00               	movlw	0
   682  0005EE  6E32               	movwf	(_start+1)^0,c
   683  0005F0  0E02               	movlw	2
   684  0005F2  6E31               	movwf	_start^0,c
   685  0005F4                     l1700:
   686                           
   687                           ;main.c: 292:                 now++;
   688  0005F4  4A43               	infsnz	_now^0,f,c
   689  0005F6  2A44               	incf	(_now+1)^0,f,c
   690  0005F8                     
   691                           ;main.c: 293:                 qnt++;
   692  0005F8  4A45               	infsnz	_qnt^0,f,c
   693  0005FA  2A46               	incf	(_qnt+1)^0,f,c
   694  0005FC                     
   695                           ;main.c: 294:                 if(delay != 300) {
   696  0005FC  0E2C               	movlw	44
   697  0005FE  1863               	xorwf	_delay^0,w,c
   698  000600  E108               	bnz	u890
   699  000602  0464               	decf	(_delay+1)^0,w,c
   700  000604  B4D8               	btfsc	status,2,c
   701  000606  EF07  F003         	goto	u891
   702  00060A  EF09  F003         	goto	u890
   703  00060E                     u891:
   704  00060E  EF3D  F003         	goto	l144
   705  000612                     u890:
   706  000612                     
   707                           ;main.c: 295:                     delay = delay - 50;
   708  000612  0ECE               	movlw	206
   709  000614  2463               	addwf	_delay^0,w,c
   710  000616  6E63               	movwf	_delay^0,c
   711  000618  0EFF               	movlw	255
   712  00061A  2064               	addwfc	(_delay+1)^0,w,c
   713  00061C  6E64               	movwf	(_delay+1)^0,c
   714  00061E  EF7A  F002         	goto	l1654
   715  000622                     l1708:
   716                           
   717                           ;main.c: 298:                 start = 2;
   718  000622  0E00               	movlw	0
   719  000624  6E32               	movwf	(_start+1)^0,c
   720  000626  0E02               	movlw	2
   721  000628  6E31               	movwf	_start^0,c
   722  00062A                     
   723                           ;main.c: 299:                 defeatFunc();
   724  00062A  EC2C  F006         	call	_defeatFunc	;wreg free
   725  00062E  EF7A  F002         	goto	l1654
   726  000632                     l1712:
   727  000632  0E02               	movlw	2
   728  000634  1831               	xorwf	_start^0,w,c
   729  000636  1032               	iorwf	(_start+1)^0,w,c
   730  000638  A4D8               	btfss	status,2,c
   731  00063A  EF21  F003         	goto	u901
   732  00063E  EF23  F003         	goto	u900
   733  000642                     u901:
   734  000642  EF3D  F003         	goto	l144
   735  000646                     u900:
   736  000646                     
   737                           ;main.c: 303:             start = 0;
   738  000646  0E00               	movlw	0
   739  000648  6E32               	movwf	(_start+1)^0,c
   740  00064A  0E00               	movlw	0
   741  00064C  6E31               	movwf	_start^0,c
   742                           
   743                           ;main.c: 304:             qnt = 0;
   744  00064E  0E00               	movlw	0
   745  000650  6E46               	movwf	(_qnt+1)^0,c
   746  000652  0E00               	movlw	0
   747  000654  6E45               	movwf	_qnt^0,c
   748                           
   749                           ;main.c: 305:             now = 0;
   750  000656  0E00               	movlw	0
   751  000658  6E44               	movwf	(_now+1)^0,c
   752  00065A  0E00               	movlw	0
   753  00065C  6E43               	movwf	_now^0,c
   754                           
   755                           ;main.c: 306:             qnt_max = 0;
   756  00065E  0E00               	movlw	0
   757  000660  6E60               	movwf	(_qnt_max+1)^0,c
   758  000662  0E00               	movlw	0
   759  000664  6E5F               	movwf	_qnt_max^0,c
   760                           
   761                           ;main.c: 307:             delay = 800;
   762  000666  0E03               	movlw	3
   763  000668  6E64               	movwf	(_delay+1)^0,c
   764  00066A  0E20               	movlw	32
   765  00066C  6E63               	movwf	_delay^0,c
   766                           
   767                           ;main.c: 308:             status_response = 0;
   768  00066E  0E00               	movlw	0
   769  000670  6E34               	movwf	(_status_response+1)^0,c
   770  000672  0E00               	movlw	0
   771  000674  6E33               	movwf	_status_response^0,c
   772  000676  EF7A  F002         	goto	l1654
   773  00067A                     l144:
   774  00067A  EF7A  F002         	goto	l1654
   775  00067E  EF07  F000         	goto	start
   776  000682                     __end_of_main:
   777                           	callstack 0
   778                           
   779 ;; *************** function _winFunc *****************
   780 ;; Defined at:
   781 ;;		line 149 in file "main.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  i               2   14[COMRAM] int 
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, status,2, status,0
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   795 ;;      Params:         0       0       0       0       0       0       0
   796 ;;      Locals:         2       0       0       0       0       0       0
   797 ;;      Temps:          2       0       0       0       0       0       0
   798 ;;      Totals:         4       0       0       0       0       0       0
   799 ;;Total ram usage:        4 bytes
   800 ;; Hardware stack levels used: 1
   801 ;; Hardware stack levels required when called: 2
   802 ;; This function calls:
   803 ;;		Nothing
   804 ;; This function is called by:
   805 ;;		_main
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	text1
   810  000948                     __ptext1:
   811                           	callstack 0
   812  000948                     _winFunc:
   813                           	callstack 28
   814  000948                     
   815                           ;main.c: 150:     int i = 0;
   816  000948  0E00               	movlw	0
   817  00094A  6E10               	movwf	(winFunc@i+1)^0,c
   818  00094C  0E00               	movlw	0
   819  00094E  6E0F               	movwf	winFunc@i^0,c
   820                           
   821                           ;main.c: 151:     while(i < 5) {
   822  000950  EFF8  F004         	goto	l1040
   823  000954                     l122:
   824                           
   825                           ;main.c: 152:         PORTCbits.RC0 = 1;
   826  000954  8082               	bsf	130,0,c	;volatile
   827  000956                     
   828                           ;main.c: 153:         PR2 = 249;
   829  000956  0EF9               	movlw	249
   830  000958  6ECB               	movwf	203,c	;volatile
   831                           
   832                           ;main.c: 154:         CCPR1L = (249/2);
   833  00095A  0E7C               	movlw	124
   834  00095C  6EBE               	movwf	190,c	;volatile
   835  00095E                     
   836                           ;main.c: 155:         _delay((unsigned long)((200)*(16000000/4000.0)));
   837  00095E  0E05               	movlw	5
   838  000960  6E0E               	movwf	(??_winFunc+1)^0,c
   839  000962  0E0F               	movlw	15
   840  000964  6E0D               	movwf	??_winFunc^0,c
   841  000966  0EF1               	movlw	241
   842  000968                     u1247:
   843  000968  2EE8               	decfsz	wreg,f,c
   844  00096A  D7FE               	bra	u1247
   845  00096C  2E0D               	decfsz	??_winFunc^0,f,c
   846  00096E  D7FC               	bra	u1247
   847  000970  2E0E               	decfsz	(??_winFunc+1)^0,f,c
   848  000972  D7FA               	bra	u1247
   849  000974  F000               	nop	
   850  000976                     
   851                           ;main.c: 156:         PORTCbits.RC0 = 0;
   852  000976  9082               	bcf	130,0,c	;volatile
   853  000978                     
   854                           ;main.c: 157:         PORTCbits.RC3 = 1;
   855  000978  8682               	bsf	130,3,c	;volatile
   856  00097A                     
   857                           ;main.c: 158:         PR2 = 166;
   858  00097A  0EA6               	movlw	166
   859  00097C  6ECB               	movwf	203,c	;volatile
   860  00097E                     
   861                           ;main.c: 159:         CCPR1L = (166/2);
   862  00097E  0E53               	movlw	83
   863  000980  6EBE               	movwf	190,c	;volatile
   864  000982                     
   865                           ;main.c: 160:         _delay((unsigned long)((200)*(16000000/4000.0)));
   866  000982  0E05               	movlw	5
   867  000984  6E0E               	movwf	(??_winFunc+1)^0,c
   868  000986  0E0F               	movlw	15
   869  000988  6E0D               	movwf	??_winFunc^0,c
   870  00098A  0EF1               	movlw	241
   871  00098C                     u1257:
   872  00098C  2EE8               	decfsz	wreg,f,c
   873  00098E  D7FE               	bra	u1257
   874  000990  2E0D               	decfsz	??_winFunc^0,f,c
   875  000992  D7FC               	bra	u1257
   876  000994  2E0E               	decfsz	(??_winFunc+1)^0,f,c
   877  000996  D7FA               	bra	u1257
   878  000998  F000               	nop	
   879  00099A                     
   880                           ;main.c: 161:         PORTCbits.RC3 = 0;
   881  00099A  9682               	bcf	130,3,c	;volatile
   882  00099C                     
   883                           ;main.c: 162:         PORTCbits.RC4 = 1;
   884  00099C  8882               	bsf	130,4,c	;volatile
   885                           
   886                           ;main.c: 163:         PR2 = 124;
   887  00099E  0E7C               	movlw	124
   888  0009A0  6ECB               	movwf	203,c	;volatile
   889                           
   890                           ;main.c: 164:         CCPR1L = (124/2);
   891  0009A2  0E3E               	movlw	62
   892  0009A4  6EBE               	movwf	190,c	;volatile
   893  0009A6                     
   894                           ;main.c: 165:         _delay((unsigned long)((200)*(16000000/4000.0)));
   895  0009A6  0E05               	movlw	5
   896  0009A8  6E0E               	movwf	(??_winFunc+1)^0,c
   897  0009AA  0E0F               	movlw	15
   898  0009AC  6E0D               	movwf	??_winFunc^0,c
   899  0009AE  0EF1               	movlw	241
   900  0009B0                     u1267:
   901  0009B0  2EE8               	decfsz	wreg,f,c
   902  0009B2  D7FE               	bra	u1267
   903  0009B4  2E0D               	decfsz	??_winFunc^0,f,c
   904  0009B6  D7FC               	bra	u1267
   905  0009B8  2E0E               	decfsz	(??_winFunc+1)^0,f,c
   906  0009BA  D7FA               	bra	u1267
   907  0009BC  F000               	nop	
   908  0009BE                     
   909                           ;main.c: 166:         PORTCbits.RC4 = 0;
   910  0009BE  9882               	bcf	130,4,c	;volatile
   911  0009C0                     
   912                           ;main.c: 167:         PORTCbits.RC1 = 1;
   913  0009C0  8282               	bsf	130,1,c	;volatile
   914  0009C2                     
   915                           ;main.c: 168:         PR2 = 199;
   916  0009C2  0EC7               	movlw	199
   917  0009C4  6ECB               	movwf	203,c	;volatile
   918  0009C6                     
   919                           ;main.c: 169:         CCPR1L = (199/2);
   920  0009C6  0E63               	movlw	99
   921  0009C8  6EBE               	movwf	190,c	;volatile
   922  0009CA                     
   923                           ;main.c: 170:         _delay((unsigned long)((200)*(16000000/4000.0)));
   924  0009CA  0E05               	movlw	5
   925  0009CC  6E0E               	movwf	(??_winFunc+1)^0,c
   926  0009CE  0E0F               	movlw	15
   927  0009D0  6E0D               	movwf	??_winFunc^0,c
   928  0009D2  0EF1               	movlw	241
   929  0009D4                     u1277:
   930  0009D4  2EE8               	decfsz	wreg,f,c
   931  0009D6  D7FE               	bra	u1277
   932  0009D8  2E0D               	decfsz	??_winFunc^0,f,c
   933  0009DA  D7FC               	bra	u1277
   934  0009DC  2E0E               	decfsz	(??_winFunc+1)^0,f,c
   935  0009DE  D7FA               	bra	u1277
   936  0009E0  F000               	nop	
   937  0009E2                     
   938                           ;main.c: 171:         PORTCbits.RC1 = 0;
   939  0009E2  9282               	bcf	130,1,c	;volatile
   940  0009E4                     
   941                           ;main.c: 172:         i++;
   942  0009E4  4A0F               	infsnz	winFunc@i^0,f,c
   943  0009E6  2A10               	incf	(winFunc@i+1)^0,f,c
   944  0009E8                     
   945                           ;main.c: 173:         PR2 = 0;
   946  0009E8  0E00               	movlw	0
   947  0009EA  6ECB               	movwf	203,c	;volatile
   948  0009EC                     
   949                           ;main.c: 174:         CCPR1L = 0;
   950  0009EC  0E00               	movlw	0
   951  0009EE  6EBE               	movwf	190,c	;volatile
   952  0009F0                     l1040:
   953                           
   954                           ;main.c: 151:     while(i < 5) {
   955  0009F0  BE10               	btfsc	(winFunc@i+1)^0,7,c
   956  0009F2  EF04  F005         	goto	u101
   957  0009F6  5010               	movf	(winFunc@i+1)^0,w,c
   958  0009F8  E109               	bnz	u100
   959  0009FA  0E05               	movlw	5
   960  0009FC  5C0F               	subwf	winFunc@i^0,w,c
   961  0009FE  A0D8               	btfss	status,0,c
   962  000A00  EF04  F005         	goto	u101
   963  000A04  EF06  F005         	goto	u100
   964  000A08                     u101:
   965  000A08  EFAA  F004         	goto	l122
   966  000A0C                     u100:
   967  000A0C  0012               	return		;funcret
   968  000A0E                     __end_of_winFunc:
   969                           	callstack 0
   970                           
   971 ;; *************** function _srand *****************
   972 ;; Defined at:
   973 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\rand.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  s               2   12[COMRAM] unsigned int 
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      void 
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   987 ;;      Params:         2       0       0       0       0       0       0
   988 ;;      Locals:         0       0       0       0       0       0       0
   989 ;;      Temps:          4       0       0       0       0       0       0
   990 ;;      Totals:         6       0       0       0       0       0       0
   991 ;;Total ram usage:        6 bytes
   992 ;; Hardware stack levels used: 1
   993 ;; Hardware stack levels required when called: 2
   994 ;; This function calls:
   995 ;;		Nothing
   996 ;; This function is called by:
   997 ;;		_main
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text2
  1002  000D68                     __ptext2:
  1003                           	callstack 0
  1004  000D68                     _srand:
  1005                           	callstack 28
  1006  000D68  0EFF               	movlw	255
  1007  000D6A  6E0F               	movwf	??_srand^0,c
  1008  000D6C  0EFF               	movlw	255
  1009  000D6E  6E10               	movwf	(??_srand+1)^0,c
  1010  000D70  C00D  F011         	movff	srand@s,??_srand+2
  1011  000D74  C00E  F012         	movff	srand@s+1,??_srand+3
  1012  000D78  500F               	movf	??_srand^0,w,c
  1013  000D7A  2611               	addwf	(??_srand+2)^0,f,c
  1014  000D7C  5010               	movf	(??_srand+1)^0,w,c
  1015  000D7E  2212               	addwfc	(??_srand+3)^0,f,c
  1016  000D80  C011  F065         	movff	??_srand+2,_seed
  1017  000D84  C012  F066         	movff	??_srand+3,_seed+1
  1018  000D88  6A67               	clrf	(_seed+2)^0,c
  1019  000D8A  6A68               	clrf	(_seed+3)^0,c
  1020  000D8C  0012               	return		;funcret
  1021  000D8E                     __end_of_srand:
  1022                           	callstack 0
  1023                           
  1024 ;; *************** function _selectDifficulty *****************
  1025 ;; Defined at:
  1026 ;;		line 178 in file "main.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;		None
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;		None
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, status,2, status,0
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1040 ;;      Params:         0       0       0       0       0       0       0
  1041 ;;      Locals:         0       0       0       0       0       0       0
  1042 ;;      Temps:          2       0       0       0       0       0       0
  1043 ;;      Totals:         2       0       0       0       0       0       0
  1044 ;;Total ram usage:        2 bytes
  1045 ;; Hardware stack levels used: 1
  1046 ;; Hardware stack levels required when called: 2
  1047 ;; This function calls:
  1048 ;;		Nothing
  1049 ;; This function is called by:
  1050 ;;		_main
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text3
  1055  000820                     __ptext3:
  1056                           	callstack 0
  1057  000820                     _selectDifficulty:
  1058                           	callstack 28
  1059  000820                     l1042:
  1060                           
  1061                           ;main.c: 179:     while(start == 0){
  1062  000820  EF9A  F004         	goto	l1092
  1063  000824                     l128:
  1064                           
  1065                           ;main.c: 180:         dispValue = qnt_max;
  1066  000824  C05F  F049         	movff	_qnt_max,_dispValue
  1067  000828  C060  F04A         	movff	_qnt_max+1,_dispValue+1
  1068                           
  1069                           ;main.c: 181:         if(PORTAbits.RA2) {
  1070  00082C  A480               	btfss	128,2,c	;volatile
  1071  00082E  EF1B  F004         	goto	u111
  1072  000832  EF1D  F004         	goto	u110
  1073  000836                     u111:
  1074  000836  EF37  F004         	goto	l129
  1075  00083A                     u110:
  1076  00083A                     
  1077                           ;main.c: 182:             PORTCbits.RC3 = 1;
  1078  00083A  8682               	bsf	130,3,c	;volatile
  1079  00083C                     
  1080                           ;main.c: 183:             PR2 = 166;
  1081  00083C  0EA6               	movlw	166
  1082  00083E  6ECB               	movwf	203,c	;volatile
  1083                           
  1084                           ;main.c: 184:             CCPR1L = (166/2);
  1085  000840  0E53               	movlw	83
  1086  000842  6EBE               	movwf	190,c	;volatile
  1087  000844                     
  1088                           ;main.c: 185:             _delay((unsigned long)((300)*(16000000/4000.0)));
  1089  000844  0E07               	movlw	7
  1090  000846  6E0E               	movwf	(??_selectDifficulty+1)^0,c
  1091  000848  0E17               	movlw	23
  1092  00084A  6E0D               	movwf	??_selectDifficulty^0,c
  1093  00084C  0E6A               	movlw	106
  1094  00084E                     u1287:
  1095  00084E  2EE8               	decfsz	wreg,f,c
  1096  000850  D7FE               	bra	u1287
  1097  000852  2E0D               	decfsz	??_selectDifficulty^0,f,c
  1098  000854  D7FC               	bra	u1287
  1099  000856  2E0E               	decfsz	(??_selectDifficulty+1)^0,f,c
  1100  000858  D7FA               	bra	u1287
  1101  00085A  D000               	nop2	
  1102  00085C                     
  1103                           ;main.c: 186:             CCPR1L = 0;
  1104  00085C  0E00               	movlw	0
  1105  00085E  6EBE               	movwf	190,c	;volatile
  1106  000860                     
  1107                           ;main.c: 187:             PORTCbits.RC3 = 0;
  1108  000860  9682               	bcf	130,3,c	;volatile
  1109  000862                     
  1110                           ;main.c: 188:             qnt_max = 8;
  1111  000862  0E00               	movlw	0
  1112  000864  6E60               	movwf	(_qnt_max+1)^0,c
  1113  000866  0E08               	movlw	8
  1114  000868  6E5F               	movwf	_qnt_max^0,c
  1115                           
  1116                           ;main.c: 189:         }
  1117  00086A  EF9A  F004         	goto	l1092
  1118  00086E                     l129:
  1119  00086E  A080               	btfss	128,0,c	;volatile
  1120  000870  EF3C  F004         	goto	u121
  1121  000874  EF3E  F004         	goto	u120
  1122  000878                     u121:
  1123  000878  EF58  F004         	goto	l131
  1124  00087C                     u120:
  1125  00087C                     
  1126                           ;main.c: 191:             PORTCbits.RC0 = 1;
  1127  00087C  8082               	bsf	130,0,c	;volatile
  1128  00087E                     
  1129                           ;main.c: 192:             PR2 = 249;
  1130  00087E  0EF9               	movlw	249
  1131  000880  6ECB               	movwf	203,c	;volatile
  1132                           
  1133                           ;main.c: 193:             CCPR1L = (249/2);
  1134  000882  0E7C               	movlw	124
  1135  000884  6EBE               	movwf	190,c	;volatile
  1136  000886                     
  1137                           ;main.c: 194:             _delay((unsigned long)((300)*(16000000/4000.0)));
  1138  000886  0E07               	movlw	7
  1139  000888  6E0E               	movwf	(??_selectDifficulty+1)^0,c
  1140  00088A  0E17               	movlw	23
  1141  00088C  6E0D               	movwf	??_selectDifficulty^0,c
  1142  00088E  0E6A               	movlw	106
  1143  000890                     u1297:
  1144  000890  2EE8               	decfsz	wreg,f,c
  1145  000892  D7FE               	bra	u1297
  1146  000894  2E0D               	decfsz	??_selectDifficulty^0,f,c
  1147  000896  D7FC               	bra	u1297
  1148  000898  2E0E               	decfsz	(??_selectDifficulty+1)^0,f,c
  1149  00089A  D7FA               	bra	u1297
  1150  00089C  D000               	nop2	
  1151  00089E                     
  1152                           ;main.c: 195:             CCPR1L = 0;
  1153  00089E  0E00               	movlw	0
  1154  0008A0  6EBE               	movwf	190,c	;volatile
  1155  0008A2                     
  1156                           ;main.c: 196:             PORTCbits.RC0 = 0;
  1157  0008A2  9082               	bcf	130,0,c	;volatile
  1158  0008A4                     
  1159                           ;main.c: 197:             qnt_max = 14;
  1160  0008A4  0E00               	movlw	0
  1161  0008A6  6E60               	movwf	(_qnt_max+1)^0,c
  1162  0008A8  0E0E               	movlw	14
  1163  0008AA  6E5F               	movwf	_qnt_max^0,c
  1164                           
  1165                           ;main.c: 198:         }
  1166  0008AC  EF10  F004         	goto	l1042
  1167  0008B0                     l131:
  1168  0008B0  A280               	btfss	128,1,c	;volatile
  1169  0008B2  EF5D  F004         	goto	u131
  1170  0008B6  EF5F  F004         	goto	u130
  1171  0008BA                     u131:
  1172  0008BA  EF79  F004         	goto	l133
  1173  0008BE                     u130:
  1174  0008BE                     
  1175                           ;main.c: 200:             PORTCbits.RC1 = 1;
  1176  0008BE  8282               	bsf	130,1,c	;volatile
  1177  0008C0                     
  1178                           ;main.c: 201:             PR2 = 199;
  1179  0008C0  0EC7               	movlw	199
  1180  0008C2  6ECB               	movwf	203,c	;volatile
  1181                           
  1182                           ;main.c: 202:             CCPR1L = (199/2);
  1183  0008C4  0E63               	movlw	99
  1184  0008C6  6EBE               	movwf	190,c	;volatile
  1185  0008C8                     
  1186                           ;main.c: 203:             _delay((unsigned long)((300)*(16000000/4000.0)));
  1187  0008C8  0E07               	movlw	7
  1188  0008CA  6E0E               	movwf	(??_selectDifficulty+1)^0,c
  1189  0008CC  0E17               	movlw	23
  1190  0008CE  6E0D               	movwf	??_selectDifficulty^0,c
  1191  0008D0  0E6A               	movlw	106
  1192  0008D2                     u1307:
  1193  0008D2  2EE8               	decfsz	wreg,f,c
  1194  0008D4  D7FE               	bra	u1307
  1195  0008D6  2E0D               	decfsz	??_selectDifficulty^0,f,c
  1196  0008D8  D7FC               	bra	u1307
  1197  0008DA  2E0E               	decfsz	(??_selectDifficulty+1)^0,f,c
  1198  0008DC  D7FA               	bra	u1307
  1199  0008DE  D000               	nop2	
  1200  0008E0                     
  1201                           ;main.c: 204:             CCPR1L = 0;
  1202  0008E0  0E00               	movlw	0
  1203  0008E2  6EBE               	movwf	190,c	;volatile
  1204  0008E4                     
  1205                           ;main.c: 205:             PORTCbits.RC1 = 0;
  1206  0008E4  9282               	bcf	130,1,c	;volatile
  1207  0008E6                     
  1208                           ;main.c: 206:             qnt_max = 20;
  1209  0008E6  0E00               	movlw	0
  1210  0008E8  6E60               	movwf	(_qnt_max+1)^0,c
  1211  0008EA  0E14               	movlw	20
  1212  0008EC  6E5F               	movwf	_qnt_max^0,c
  1213                           
  1214                           ;main.c: 207:         }
  1215  0008EE  EF9A  F004         	goto	l1092
  1216  0008F2                     l133:
  1217  0008F2  A680               	btfss	128,3,c	;volatile
  1218  0008F4  EF7E  F004         	goto	u141
  1219  0008F8  EF80  F004         	goto	u140
  1220  0008FC                     u141:
  1221  0008FC  EF10  F004         	goto	l1042
  1222  000900                     u140:
  1223  000900                     
  1224                           ;main.c: 209:             PORTCbits.RC4 = 1;
  1225  000900  8882               	bsf	130,4,c	;volatile
  1226  000902                     
  1227                           ;main.c: 210:             PR2 = 124;
  1228  000902  0E7C               	movlw	124
  1229  000904  6ECB               	movwf	203,c	;volatile
  1230                           
  1231                           ;main.c: 211:             CCPR1L = (124/2);
  1232  000906  0E3E               	movlw	62
  1233  000908  6EBE               	movwf	190,c	;volatile
  1234  00090A                     
  1235                           ;main.c: 212:             _delay((unsigned long)((300)*(16000000/4000.0)));
  1236  00090A  0E07               	movlw	7
  1237  00090C  6E0E               	movwf	(??_selectDifficulty+1)^0,c
  1238  00090E  0E17               	movlw	23
  1239  000910  6E0D               	movwf	??_selectDifficulty^0,c
  1240  000912  0E6A               	movlw	106
  1241  000914                     u1317:
  1242  000914  2EE8               	decfsz	wreg,f,c
  1243  000916  D7FE               	bra	u1317
  1244  000918  2E0D               	decfsz	??_selectDifficulty^0,f,c
  1245  00091A  D7FC               	bra	u1317
  1246  00091C  2E0E               	decfsz	(??_selectDifficulty+1)^0,f,c
  1247  00091E  D7FA               	bra	u1317
  1248  000920  D000               	nop2	
  1249  000922                     
  1250                           ;main.c: 213:             CCPR1L = 0;
  1251  000922  0E00               	movlw	0
  1252  000924  6EBE               	movwf	190,c	;volatile
  1253  000926                     
  1254                           ;main.c: 214:             PORTCbits.RC4 = 0;
  1255  000926  9882               	bcf	130,4,c	;volatile
  1256  000928                     
  1257                           ;main.c: 215:             qnt_max = 31;
  1258  000928  0E00               	movlw	0
  1259  00092A  6E60               	movwf	(_qnt_max+1)^0,c
  1260  00092C  0E1F               	movlw	31
  1261  00092E  6E5F               	movwf	_qnt_max^0,c
  1262  000930  EF10  F004         	goto	l1042
  1263  000934                     l1092:
  1264                           
  1265                           ;main.c: 179:     while(start == 0){
  1266  000934  5031               	movf	_start^0,w,c
  1267  000936  1032               	iorwf	(_start+1)^0,w,c
  1268  000938  B4D8               	btfsc	status,2,c
  1269  00093A  EFA1  F004         	goto	u151
  1270  00093E  EFA3  F004         	goto	u150
  1271  000942                     u151:
  1272  000942  EF12  F004         	goto	l128
  1273  000946                     u150:
  1274  000946  0012               	return		;funcret
  1275  000948                     __end_of_selectDifficulty:
  1276                           	callstack 0
  1277                           
  1278 ;; *************** function _receiveInput *****************
  1279 ;; Defined at:
  1280 ;;		line 117 in file "main.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  qnt             2   12[COMRAM] int 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2, status,0
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1294 ;;      Params:         2       0       0       0       0       0       0
  1295 ;;      Locals:         0       0       0       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0
  1297 ;;      Totals:         2       0       0       0       0       0       0
  1298 ;;Total ram usage:        2 bytes
  1299 ;; Hardware stack levels used: 1
  1300 ;; Hardware stack levels required when called: 2
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_main
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text4
  1309  000D34                     __ptext4:
  1310                           	callstack 0
  1311  000D34                     _receiveInput:
  1312                           	callstack 28
  1313  000D34                     
  1314                           ;main.c: 118:     while (index_input != qnt){
  1315  000D34  EFA7  F006         	goto	l1528
  1316  000D38                     l1524:
  1317                           
  1318                           ;main.c: 119:         if(status_response != 0){
  1319  000D38  5033               	movf	_status_response^0,w,c
  1320  000D3A  1034               	iorwf	(_status_response+1)^0,w,c
  1321  000D3C  B4D8               	btfsc	status,2,c
  1322  000D3E  EFA3  F006         	goto	u711
  1323  000D42  EFA5  F006         	goto	u710
  1324  000D46                     u711:
  1325  000D46  EFA7  F006         	goto	l1528
  1326  000D4A                     u710:
  1327  000D4A  EFB3  F006         	goto	l112
  1328  000D4E                     l1528:
  1329                           
  1330                           ;main.c: 118:     while (index_input != qnt){
  1331  000D4E  500D               	movf	receiveInput@qnt^0,w,c
  1332  000D50  1835               	xorwf	_index_input^0,w,c
  1333  000D52  E107               	bnz	u721
  1334  000D54  500E               	movf	(receiveInput@qnt+1)^0,w,c
  1335  000D56  1836               	xorwf	(_index_input+1)^0,w,c
  1336  000D58  A4D8               	btfss	status,2,c
  1337  000D5A  EFB1  F006         	goto	u721
  1338  000D5E  EFB3  F006         	goto	u720
  1339  000D62                     u721:
  1340  000D62  EF9C  F006         	goto	l1524
  1341  000D66                     u720:
  1342  000D66                     l112:
  1343  000D66  0012               	return		;funcret
  1344  000D68                     __end_of_receiveInput:
  1345                           	callstack 0
  1346                           
  1347 ;; *************** function _defeatFunc *****************
  1348 ;; Defined at:
  1349 ;;		line 125 in file "main.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;		None
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;		None
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg, status,2, status,0
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1363 ;;      Params:         0       0       0       0       0       0       0
  1364 ;;      Locals:         0       0       0       0       0       0       0
  1365 ;;      Temps:          2       0       0       0       0       0       0
  1366 ;;      Totals:         2       0       0       0       0       0       0
  1367 ;;Total ram usage:        2 bytes
  1368 ;; Hardware stack levels used: 1
  1369 ;; Hardware stack levels required when called: 2
  1370 ;; This function calls:
  1371 ;;		Nothing
  1372 ;; This function is called by:
  1373 ;;		_main
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text5
  1378  000C58                     __ptext5:
  1379                           	callstack 0
  1380  000C58                     _defeatFunc:
  1381                           	callstack 28
  1382  000C58                     
  1383                           ;main.c: 126:     if(status_response == 1){
  1384  000C58  0433               	decf	_status_response^0,w,c
  1385  000C5A  1034               	iorwf	(_status_response+1)^0,w,c
  1386  000C5C  A4D8               	btfss	status,2,c
  1387  000C5E  EF33  F006         	goto	u91
  1388  000C62  EF35  F006         	goto	u90
  1389  000C66                     u91:
  1390  000C66  EF4B  F006         	goto	l980
  1391  000C6A                     u90:
  1392  000C6A                     
  1393                           ;main.c: 127:         PR2 = 249;
  1394  000C6A  0EF9               	movlw	249
  1395  000C6C  6ECB               	movwf	203,c	;volatile
  1396                           
  1397                           ;main.c: 128:         CCPR1L = (249/2);
  1398  000C6E  0E7C               	movlw	124
  1399  000C70  6EBE               	movwf	190,c	;volatile
  1400  000C72                     
  1401                           ;main.c: 129:         PORTCbits.RC0 = 1;
  1402  000C72  8082               	bsf	130,0,c	;volatile
  1403  000C74                     
  1404                           ;main.c: 130:         PORTCbits.RC3 = 1;
  1405  000C74  8682               	bsf	130,3,c	;volatile
  1406  000C76                     
  1407                           ;main.c: 131:         PORTCbits.RC4 = 1;
  1408  000C76  8882               	bsf	130,4,c	;volatile
  1409  000C78                     
  1410                           ;main.c: 132:         PORTCbits.RC1 = 1;
  1411  000C78  8282               	bsf	130,1,c	;volatile
  1412  000C7A                     l978:
  1413                           
  1414                           ;main.c: 133:         _delay((unsigned long)((2000)*(16000000/4000.0)));
  1415  000C7A  0E29               	movlw	41
  1416  000C7C  6E0E               	movwf	(??_defeatFunc+1)^0,c
  1417  000C7E  0E96               	movlw	150
  1418  000C80  6E0D               	movwf	??_defeatFunc^0,c
  1419  000C82  0E7F               	movlw	127
  1420  000C84                     u1327:
  1421  000C84  2EE8               	decfsz	wreg,f,c
  1422  000C86  D7FE               	bra	u1327
  1423  000C88  2E0D               	decfsz	??_defeatFunc^0,f,c
  1424  000C8A  D7FC               	bra	u1327
  1425  000C8C  2E0E               	decfsz	(??_defeatFunc+1)^0,f,c
  1426  000C8E  D7FA               	bra	u1327
  1427  000C90  F000               	nop	
  1428                           
  1429                           ;main.c: 134:     } else {
  1430  000C92  EF53  F006         	goto	l988
  1431  000C96                     l980:
  1432                           
  1433                           ;main.c: 135:         PR2 = 249;
  1434  000C96  0EF9               	movlw	249
  1435  000C98  6ECB               	movwf	203,c	;volatile
  1436                           
  1437                           ;main.c: 136:         CCPR1L = (249/2);
  1438  000C9A  0E7C               	movlw	124
  1439  000C9C  6EBE               	movwf	190,c	;volatile
  1440  000C9E                     
  1441                           ;main.c: 137:         PORTCbits.RC0 = 1;
  1442  000C9E  8082               	bsf	130,0,c	;volatile
  1443  000CA0                     
  1444                           ;main.c: 138:         PORTCbits.RC3 = 1;
  1445  000CA0  8682               	bsf	130,3,c	;volatile
  1446  000CA2  EF3D  F006         	goto	l978
  1447  000CA6                     l988:
  1448                           
  1449                           ;main.c: 141:     PR2 = 0;
  1450  000CA6  0E00               	movlw	0
  1451  000CA8  6ECB               	movwf	203,c	;volatile
  1452  000CAA                     
  1453                           ;main.c: 142:     CCPR1L = 0;
  1454  000CAA  0E00               	movlw	0
  1455  000CAC  6EBE               	movwf	190,c	;volatile
  1456  000CAE                     
  1457                           ;main.c: 143:     PORTCbits.RC0 = 0;
  1458  000CAE  9082               	bcf	130,0,c	;volatile
  1459  000CB0                     
  1460                           ;main.c: 144:     PORTCbits.RC3 = 0;
  1461  000CB0  9682               	bcf	130,3,c	;volatile
  1462  000CB2                     
  1463                           ;main.c: 145:     PORTCbits.RC4 = 0;
  1464  000CB2  9882               	bcf	130,4,c	;volatile
  1465  000CB4                     
  1466                           ;main.c: 146:     PORTCbits.RC1 = 0;
  1467  000CB4  9282               	bcf	130,1,c	;volatile
  1468  000CB6  0012               	return		;funcret
  1469  000CB8                     __end_of_defeatFunc:
  1470                           	callstack 0
  1471                           
  1472 ;; *************** function _SequenceGenerator *****************
  1473 ;; Defined at:
  1474 ;;		line 65 in file "main.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  start           2   30[COMRAM] int 
  1477 ;;  qnt             2   32[COMRAM] int 
  1478 ;;  delay           2   34[COMRAM] int 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;  j               2   42[COMRAM] int 
  1481 ;;  i               2   40[COMRAM] int 
  1482 ;;  r               2   38[COMRAM] int 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1492 ;;      Params:         6       0       0       0       0       0       0
  1493 ;;      Locals:         6       0       0       0       0       0       0
  1494 ;;      Temps:          2       0       0       0       0       0       0
  1495 ;;      Totals:        14       0       0       0       0       0       0
  1496 ;;Total ram usage:       14 bytes
  1497 ;; Hardware stack levels used: 1
  1498 ;; Hardware stack levels required when called: 4
  1499 ;; This function calls:
  1500 ;;		_delay_ms
  1501 ;;		_rand
  1502 ;; This function is called by:
  1503 ;;		_main
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text6
  1508  000682                     __ptext6:
  1509                           	callstack 0
  1510  000682                     _SequenceGenerator:
  1511                           	callstack 26
  1512  000682                     
  1513                           ;main.c: 67:     for(int i = start; i < qnt; i++) {
  1514  000682  C01F  F029         	movff	SequenceGenerator@start,SequenceGenerator@i
  1515  000686  C020  F02A         	movff	SequenceGenerator@start+1,SequenceGenerator@i+1
  1516  00068A  EF62  F003         	goto	l1472
  1517  00068E                     l1466:
  1518                           
  1519                           ;main.c: 68:         r = rand()%4;
  1520  00068E  ECC1  F005         	call	_rand	;wreg free
  1521  000692  0E03               	movlw	3
  1522  000694  1419               	andwf	?_rand^0,w,c
  1523  000696  6E27               	movwf	SequenceGenerator@r^0,c
  1524  000698  6A28               	clrf	(SequenceGenerator@r+1)^0,c
  1525  00069A                     
  1526                           ;main.c: 69:         sequence[i] = r+1;
  1527  00069A  0E01               	movlw	1
  1528  00069C  2427               	addwf	SequenceGenerator@r^0,w,c
  1529  00069E  6E25               	movwf	??_SequenceGenerator^0,c
  1530  0006A0  0E00               	movlw	0
  1531  0006A2  2028               	addwfc	(SequenceGenerator@r+1)^0,w,c
  1532  0006A4  6E26               	movwf	(??_SequenceGenerator+1)^0,c
  1533  0006A6  90D8               	bcf	status,0,c
  1534  0006A8  3429               	rlcf	SequenceGenerator@i^0,w,c
  1535  0006AA  6ED9               	movwf	fsr2l,c
  1536  0006AC  342A               	rlcf	(SequenceGenerator@i+1)^0,w,c
  1537  0006AE  6EDA               	movwf	fsr2h,c
  1538  0006B0  0E80               	movlw	low _sequence
  1539  0006B2  26D9               	addwf	fsr2l,f,c
  1540  0006B4  0E00               	movlw	high _sequence
  1541  0006B6  22DA               	addwfc	fsr2h,f,c
  1542  0006B8  C025  FFDE         	movff	??_SequenceGenerator,postinc2
  1543  0006BC  C026  FFDD         	movff	??_SequenceGenerator+1,postdec2
  1544  0006C0                     
  1545                           ;main.c: 70:     }
  1546  0006C0  4A29               	infsnz	SequenceGenerator@i^0,f,c
  1547  0006C2  2A2A               	incf	(SequenceGenerator@i+1)^0,f,c
  1548  0006C4                     l1472:
  1549  0006C4  5021               	movf	SequenceGenerator@qnt^0,w,c
  1550  0006C6  5C29               	subwf	SequenceGenerator@i^0,w,c
  1551  0006C8  502A               	movf	(SequenceGenerator@i+1)^0,w,c
  1552  0006CA  0A80               	xorlw	128
  1553  0006CC  6E25               	movwf	??_SequenceGenerator^0,c
  1554  0006CE  5022               	movf	(SequenceGenerator@qnt+1)^0,w,c
  1555  0006D0  0A80               	xorlw	128
  1556  0006D2  5825               	subwfb	??_SequenceGenerator^0,w,c
  1557  0006D4  A0D8               	btfss	status,0,c
  1558  0006D6  EF6F  F003         	goto	u691
  1559  0006DA  EF71  F003         	goto	u690
  1560  0006DE                     u691:
  1561  0006DE  EF47  F003         	goto	l1466
  1562  0006E2                     u690:
  1563  0006E2                     
  1564                           ;main.c: 71:     for(int j = 0; j < qnt; j++) {
  1565  0006E2  0E00               	movlw	0
  1566  0006E4  6E2C               	movwf	(SequenceGenerator@j+1)^0,c
  1567  0006E6  0E00               	movlw	0
  1568  0006E8  6E2B               	movwf	SequenceGenerator@j^0,c
  1569  0006EA  EF00  F004         	goto	l1516
  1570  0006EE                     l99:
  1571                           
  1572                           ;main.c: 74:                 PORTCbits.RC0 = 1;
  1573  0006EE  8082               	bsf	130,0,c	;volatile
  1574  0006F0                     
  1575                           ;main.c: 75:                 PR2 = 249;
  1576  0006F0  0EF9               	movlw	249
  1577  0006F2  6ECB               	movwf	203,c	;volatile
  1578                           
  1579                           ;main.c: 76:                 CCPR1L = (249/2);
  1580  0006F4  0E7C               	movlw	124
  1581  0006F6  6EBE               	movwf	190,c	;volatile
  1582  0006F8                     
  1583                           ;main.c: 77:                 delay_ms(delay);
  1584  0006F8  C023  F00D         	movff	SequenceGenerator@delay,delay_ms@milliseconds
  1585  0006FC  C024  F00E         	movff	SequenceGenerator@delay+1,delay_ms@milliseconds+1
  1586  000700  EC7F  F006         	call	_delay_ms	;wreg free
  1587  000704                     
  1588                           ;main.c: 78:                 CCPR1L = 0;
  1589  000704  0E00               	movlw	0
  1590  000706  6EBE               	movwf	190,c	;volatile
  1591  000708                     
  1592                           ;main.c: 79:                 PORTCbits.RC0 = 0;
  1593  000708  9082               	bcf	130,0,c	;volatile
  1594                           
  1595                           ;main.c: 80:                 delay_ms(200);
  1596  00070A  0E00               	movlw	0
  1597  00070C  6E0E               	movwf	(delay_ms@milliseconds+1)^0,c
  1598  00070E  0EC8               	movlw	200
  1599  000710  6E0D               	movwf	delay_ms@milliseconds^0,c
  1600  000712  EC7F  F006         	call	_delay_ms	;wreg free
  1601                           
  1602                           ;main.c: 81:                 break;
  1603  000716  EFFE  F003         	goto	l1514
  1604  00071A                     l101:
  1605                           
  1606                           ;main.c: 83:                 PORTCbits.RC3 = 1;
  1607  00071A  8682               	bsf	130,3,c	;volatile
  1608  00071C                     
  1609                           ;main.c: 84:                 PR2 = 166;
  1610  00071C  0EA6               	movlw	166
  1611  00071E  6ECB               	movwf	203,c	;volatile
  1612                           
  1613                           ;main.c: 85:                 CCPR1L = (166/2);
  1614  000720  0E53               	movlw	83
  1615  000722  6EBE               	movwf	190,c	;volatile
  1616  000724                     
  1617                           ;main.c: 86:                 delay_ms(delay);
  1618  000724  C023  F00D         	movff	SequenceGenerator@delay,delay_ms@milliseconds
  1619  000728  C024  F00E         	movff	SequenceGenerator@delay+1,delay_ms@milliseconds+1
  1620  00072C  EC7F  F006         	call	_delay_ms	;wreg free
  1621  000730                     
  1622                           ;main.c: 87:                 CCPR1L = 0;
  1623  000730  0E00               	movlw	0
  1624  000732  6EBE               	movwf	190,c	;volatile
  1625  000734                     
  1626                           ;main.c: 88:                 PORTCbits.RC3 = 0;
  1627  000734  9682               	bcf	130,3,c	;volatile
  1628                           
  1629                           ;main.c: 89:                 delay_ms(200);
  1630  000736  0E00               	movlw	0
  1631  000738  6E0E               	movwf	(delay_ms@milliseconds+1)^0,c
  1632  00073A  0EC8               	movlw	200
  1633  00073C  6E0D               	movwf	delay_ms@milliseconds^0,c
  1634  00073E  EC7F  F006         	call	_delay_ms	;wreg free
  1635                           
  1636                           ;main.c: 90:                 break;
  1637  000742  EFFE  F003         	goto	l1514
  1638  000746                     l102:
  1639                           
  1640                           ;main.c: 92:                 PORTCbits.RC4 = 1;
  1641  000746  8882               	bsf	130,4,c	;volatile
  1642  000748                     
  1643                           ;main.c: 93:                 PR2 = 124;
  1644  000748  0E7C               	movlw	124
  1645  00074A  6ECB               	movwf	203,c	;volatile
  1646                           
  1647                           ;main.c: 94:                 CCPR1L = (124/2);
  1648  00074C  0E3E               	movlw	62
  1649  00074E  6EBE               	movwf	190,c	;volatile
  1650  000750                     
  1651                           ;main.c: 95:                 delay_ms(delay);
  1652  000750  C023  F00D         	movff	SequenceGenerator@delay,delay_ms@milliseconds
  1653  000754  C024  F00E         	movff	SequenceGenerator@delay+1,delay_ms@milliseconds+1
  1654  000758  EC7F  F006         	call	_delay_ms	;wreg free
  1655  00075C                     
  1656                           ;main.c: 96:                 CCPR1L = 0;
  1657  00075C  0E00               	movlw	0
  1658  00075E  6EBE               	movwf	190,c	;volatile
  1659  000760                     
  1660                           ;main.c: 97:                 PORTCbits.RC4 = 0;
  1661  000760  9882               	bcf	130,4,c	;volatile
  1662                           
  1663                           ;main.c: 98:                 delay_ms(200);
  1664  000762  0E00               	movlw	0
  1665  000764  6E0E               	movwf	(delay_ms@milliseconds+1)^0,c
  1666  000766  0EC8               	movlw	200
  1667  000768  6E0D               	movwf	delay_ms@milliseconds^0,c
  1668  00076A  EC7F  F006         	call	_delay_ms	;wreg free
  1669                           
  1670                           ;main.c: 99:                 break;
  1671  00076E  EFFE  F003         	goto	l1514
  1672  000772                     l103:
  1673                           
  1674                           ;main.c: 101:                 PORTCbits.RC1 = 1;
  1675  000772  8282               	bsf	130,1,c	;volatile
  1676  000774                     
  1677                           ;main.c: 102:                 PR2 = 199;
  1678  000774  0EC7               	movlw	199
  1679  000776  6ECB               	movwf	203,c	;volatile
  1680                           
  1681                           ;main.c: 103:                 CCPR1L = (199/2);
  1682  000778  0E63               	movlw	99
  1683  00077A  6EBE               	movwf	190,c	;volatile
  1684  00077C                     
  1685                           ;main.c: 104:                 delay_ms(delay);
  1686  00077C  C023  F00D         	movff	SequenceGenerator@delay,delay_ms@milliseconds
  1687  000780  C024  F00E         	movff	SequenceGenerator@delay+1,delay_ms@milliseconds+1
  1688  000784  EC7F  F006         	call	_delay_ms	;wreg free
  1689  000788                     
  1690                           ;main.c: 105:                 CCPR1L = 0;
  1691  000788  0E00               	movlw	0
  1692  00078A  6EBE               	movwf	190,c	;volatile
  1693  00078C                     
  1694                           ;main.c: 106:                 PORTCbits.RC1 = 0;
  1695  00078C  9282               	bcf	130,1,c	;volatile
  1696                           
  1697                           ;main.c: 107:                 delay_ms(200);
  1698  00078E  0E00               	movlw	0
  1699  000790  6E0E               	movwf	(delay_ms@milliseconds+1)^0,c
  1700  000792  0EC8               	movlw	200
  1701  000794  6E0D               	movwf	delay_ms@milliseconds^0,c
  1702  000796  EC7F  F006         	call	_delay_ms	;wreg free
  1703                           
  1704                           ;main.c: 108:                 break;
  1705  00079A  EFFE  F003         	goto	l1514
  1706  00079E                     l1508:
  1707                           
  1708                           ;main.c: 111:                 delay_ms(1000);
  1709  00079E  0E03               	movlw	3
  1710  0007A0  6E0E               	movwf	(delay_ms@milliseconds+1)^0,c
  1711  0007A2  0EE8               	movlw	232
  1712  0007A4  6E0D               	movwf	delay_ms@milliseconds^0,c
  1713  0007A6  EC7F  F006         	call	_delay_ms	;wreg free
  1714                           
  1715                           ;main.c: 112:                 break;
  1716  0007AA  EFFE  F003         	goto	l1514
  1717  0007AE                     l1512:
  1718  0007AE  90D8               	bcf	status,0,c
  1719  0007B0  342B               	rlcf	SequenceGenerator@j^0,w,c
  1720  0007B2  6ED9               	movwf	fsr2l,c
  1721  0007B4  342C               	rlcf	(SequenceGenerator@j+1)^0,w,c
  1722  0007B6  6EDA               	movwf	fsr2h,c
  1723  0007B8  0E80               	movlw	low _sequence
  1724  0007BA  26D9               	addwf	fsr2l,f,c
  1725  0007BC  0E00               	movlw	high _sequence
  1726  0007BE  22DA               	addwfc	fsr2h,f,c
  1727  0007C0  CFDE F025          	movff	postinc2,??_SequenceGenerator
  1728  0007C4  CFDD F026          	movff	postdec2,??_SequenceGenerator+1
  1729                           
  1730                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1731                           ; Switch size 1, requested type "simple"
  1732                           ; Number of cases is 1, Range of values is 0 to 0
  1733                           ; switch strategies available:
  1734                           ; Name         Instructions Cycles
  1735                           ; simple_byte            4     3 (average)
  1736                           ;	Chosen strategy is simple_byte
  1737  0007C8  5026               	movf	(??_SequenceGenerator+1)^0,w,c
  1738  0007CA  0A00               	xorlw	0	; case 0
  1739  0007CC  B4D8               	btfsc	status,2,c
  1740  0007CE  EFEB  F003         	goto	l1876
  1741  0007D2  EFCF  F003         	goto	l1508
  1742  0007D6                     l1876:
  1743                           
  1744                           ; Switch size 1, requested type "simple"
  1745                           ; Number of cases is 4, Range of values is 1 to 4
  1746                           ; switch strategies available:
  1747                           ; Name         Instructions Cycles
  1748                           ; simple_byte           13     7 (average)
  1749                           ;	Chosen strategy is simple_byte
  1750  0007D6  5025               	movf	??_SequenceGenerator^0,w,c
  1751  0007D8  0A01               	xorlw	1	; case 1
  1752  0007DA  B4D8               	btfsc	status,2,c
  1753  0007DC  EF77  F003         	goto	l99
  1754  0007E0  0A03               	xorlw	3	; case 2
  1755  0007E2  B4D8               	btfsc	status,2,c
  1756  0007E4  EF8D  F003         	goto	l101
  1757  0007E8  0A01               	xorlw	1	; case 3
  1758  0007EA  B4D8               	btfsc	status,2,c
  1759  0007EC  EFA3  F003         	goto	l102
  1760  0007F0  0A07               	xorlw	7	; case 4
  1761  0007F2  B4D8               	btfsc	status,2,c
  1762  0007F4  EFB9  F003         	goto	l103
  1763  0007F8  EFCF  F003         	goto	l1508
  1764  0007FC                     l1514:
  1765                           
  1766                           ;main.c: 114:     }
  1767  0007FC  4A2B               	infsnz	SequenceGenerator@j^0,f,c
  1768  0007FE  2A2C               	incf	(SequenceGenerator@j+1)^0,f,c
  1769  000800                     l1516:
  1770  000800  5021               	movf	SequenceGenerator@qnt^0,w,c
  1771  000802  5C2B               	subwf	SequenceGenerator@j^0,w,c
  1772  000804  502C               	movf	(SequenceGenerator@j+1)^0,w,c
  1773  000806  0A80               	xorlw	128
  1774  000808  6E25               	movwf	??_SequenceGenerator^0,c
  1775  00080A  5022               	movf	(SequenceGenerator@qnt+1)^0,w,c
  1776  00080C  0A80               	xorlw	128
  1777  00080E  5825               	subwfb	??_SequenceGenerator^0,w,c
  1778  000810  A0D8               	btfss	status,0,c
  1779  000812  EF0D  F004         	goto	u701
  1780  000816  EF0F  F004         	goto	u700
  1781  00081A                     u701:
  1782  00081A  EFD7  F003         	goto	l1512
  1783  00081E                     u700:
  1784  00081E  0012               	return		;funcret
  1785  000820                     __end_of_SequenceGenerator:
  1786                           	callstack 0
  1787                           
  1788 ;; *************** function _rand *****************
  1789 ;; Defined at:
  1790 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\rand.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  2   24[COMRAM] int 
  1797 ;; Registers used:
  1798 ;;		wreg, status,2, status,0, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1804 ;;      Params:         2       0       0       0       0       0       0
  1805 ;;      Locals:         0       0       0       0       0       0       0
  1806 ;;      Temps:          4       0       0       0       0       0       0
  1807 ;;      Totals:         6       0       0       0       0       0       0
  1808 ;;Total ram usage:        6 bytes
  1809 ;; Hardware stack levels used: 1
  1810 ;; Hardware stack levels required when called: 3
  1811 ;; This function calls:
  1812 ;;		___lmul
  1813 ;; This function is called by:
  1814 ;;		_SequenceGenerator
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           	psect	text7
  1819  000B82                     __ptext7:
  1820                           	callstack 0
  1821  000B82                     _rand:
  1822                           	callstack 26
  1823  000B82  C065  F00D         	movff	_seed,___lmul@multiplier
  1824  000B86  C066  F00E         	movff	_seed+1,___lmul@multiplier+1
  1825  000B8A  C067  F00F         	movff	_seed+2,___lmul@multiplier+2
  1826  000B8E  C068  F010         	movff	_seed+3,___lmul@multiplier+3
  1827  000B92  0E2D               	movlw	45
  1828  000B94  6E11               	movwf	___lmul@multiplicand^0,c
  1829  000B96  0E7F               	movlw	127
  1830  000B98  6E12               	movwf	(___lmul@multiplicand+1)^0,c
  1831  000B9A  0E95               	movlw	149
  1832  000B9C  6E13               	movwf	(___lmul@multiplicand+2)^0,c
  1833  000B9E  0E4C               	movlw	76
  1834  000BA0  6E14               	movwf	(___lmul@multiplicand+3)^0,c
  1835  000BA2  ECF7  F005         	call	___lmul	;wreg free
  1836  000BA6  0E01               	movlw	1
  1837  000BA8  240D               	addwf	?___lmul^0,w,c
  1838  000BAA  6E65               	movwf	_seed^0,c
  1839  000BAC  0E00               	movlw	0
  1840  000BAE  200E               	addwfc	(?___lmul+1)^0,w,c
  1841  000BB0  6E66               	movwf	(_seed+1)^0,c
  1842  000BB2  0E00               	movlw	0
  1843  000BB4  200F               	addwfc	(?___lmul+2)^0,w,c
  1844  000BB6  6E67               	movwf	(_seed+2)^0,c
  1845  000BB8  0E00               	movlw	0
  1846  000BBA  2010               	addwfc	(?___lmul+3)^0,w,c
  1847  000BBC  6E68               	movwf	(_seed+3)^0,c
  1848  000BBE  C065  F01B         	movff	_seed,??_rand
  1849  000BC2  C066  F01C         	movff	_seed+1,??_rand+1
  1850  000BC6  C067  F01D         	movff	_seed+2,??_rand+2
  1851  000BCA  C068  F01E         	movff	_seed+3,??_rand+3
  1852  000BCE  0E12               	movlw	18
  1853  000BD0  EFEF  F005         	goto	u680
  1854  000BD4                     u685:
  1855  000BD4  90D8               	bcf	status,0,c
  1856  000BD6  321E               	rrcf	(??_rand+3)^0,f,c
  1857  000BD8  321D               	rrcf	(??_rand+2)^0,f,c
  1858  000BDA  321C               	rrcf	(??_rand+1)^0,f,c
  1859  000BDC  321B               	rrcf	??_rand^0,f,c
  1860  000BDE                     u680:
  1861  000BDE  2EE8               	decfsz	wreg,f,c
  1862  000BE0  EFEA  F005         	goto	u685
  1863  000BE4  C01B  F019         	movff	??_rand,?_rand
  1864  000BE8  C01C  F01A         	movff	??_rand+1,?_rand+1
  1865  000BEC  0012               	return		;funcret
  1866  000BEE                     __end_of_rand:
  1867                           	callstack 0
  1868                           
  1869 ;; *************** function ___lmul *****************
  1870 ;; Defined at:
  1871 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  multiplier      4   12[COMRAM] unsigned long 
  1874 ;;  multiplicand    4   16[COMRAM] unsigned long 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  product         4   20[COMRAM] unsigned long 
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  4   12[COMRAM] unsigned long 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2, status,0
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1886 ;;      Params:         8       0       0       0       0       0       0
  1887 ;;      Locals:         4       0       0       0       0       0       0
  1888 ;;      Temps:          0       0       0       0       0       0       0
  1889 ;;      Totals:        12       0       0       0       0       0       0
  1890 ;;Total ram usage:       12 bytes
  1891 ;; Hardware stack levels used: 1
  1892 ;; Hardware stack levels required when called: 2
  1893 ;; This function calls:
  1894 ;;		Nothing
  1895 ;; This function is called by:
  1896 ;;		_rand
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           	psect	text8
  1901  000BEE                     __ptext8:
  1902                           	callstack 0
  1903  000BEE                     ___lmul:
  1904                           	callstack 26
  1905  000BEE  0E00               	movlw	0
  1906  000BF0  6E15               	movwf	___lmul@product^0,c
  1907  000BF2  0E00               	movlw	0
  1908  000BF4  6E16               	movwf	(___lmul@product+1)^0,c
  1909  000BF6  0E00               	movlw	0
  1910  000BF8  6E17               	movwf	(___lmul@product+2)^0,c
  1911  000BFA  0E00               	movlw	0
  1912  000BFC  6E18               	movwf	(___lmul@product+3)^0,c
  1913  000BFE                     l1442:
  1914  000BFE  A00D               	btfss	___lmul@multiplier^0,0,c
  1915  000C00  EF04  F006         	goto	u651
  1916  000C04  EF06  F006         	goto	u650
  1917  000C08                     u651:
  1918  000C08  EF0E  F006         	goto	l1446
  1919  000C0C                     u650:
  1920  000C0C  5011               	movf	___lmul@multiplicand^0,w,c
  1921  000C0E  2615               	addwf	___lmul@product^0,f,c
  1922  000C10  5012               	movf	(___lmul@multiplicand+1)^0,w,c
  1923  000C12  2216               	addwfc	(___lmul@product+1)^0,f,c
  1924  000C14  5013               	movf	(___lmul@multiplicand+2)^0,w,c
  1925  000C16  2217               	addwfc	(___lmul@product+2)^0,f,c
  1926  000C18  5014               	movf	(___lmul@multiplicand+3)^0,w,c
  1927  000C1A  2218               	addwfc	(___lmul@product+3)^0,f,c
  1928  000C1C                     l1446:
  1929  000C1C  90D8               	bcf	status,0,c
  1930  000C1E  3611               	rlcf	___lmul@multiplicand^0,f,c
  1931  000C20  3612               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1932  000C22  3613               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1933  000C24  3614               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1934  000C26  90D8               	bcf	status,0,c
  1935  000C28  3210               	rrcf	(___lmul@multiplier+3)^0,f,c
  1936  000C2A  320F               	rrcf	(___lmul@multiplier+2)^0,f,c
  1937  000C2C  320E               	rrcf	(___lmul@multiplier+1)^0,f,c
  1938  000C2E  320D               	rrcf	___lmul@multiplier^0,f,c
  1939  000C30  500D               	movf	___lmul@multiplier^0,w,c
  1940  000C32  100E               	iorwf	(___lmul@multiplier+1)^0,w,c
  1941  000C34  100F               	iorwf	(___lmul@multiplier+2)^0,w,c
  1942  000C36  1010               	iorwf	(___lmul@multiplier+3)^0,w,c
  1943  000C38  A4D8               	btfss	status,2,c
  1944  000C3A  EF21  F006         	goto	u661
  1945  000C3E  EF23  F006         	goto	u660
  1946  000C42                     u661:
  1947  000C42  EFFF  F005         	goto	l1442
  1948  000C46                     u660:
  1949  000C46  C015  F00D         	movff	___lmul@product,?___lmul
  1950  000C4A  C016  F00E         	movff	___lmul@product+1,?___lmul+1
  1951  000C4E  C017  F00F         	movff	___lmul@product+2,?___lmul+2
  1952  000C52  C018  F010         	movff	___lmul@product+3,?___lmul+3
  1953  000C56  0012               	return		;funcret
  1954  000C58                     __end_of___lmul:
  1955                           	callstack 0
  1956                           
  1957 ;; *************** function _delay_ms *****************
  1958 ;; Defined at:
  1959 ;;		line 58 in file "main.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  milliseconds    2   12[COMRAM] int 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg, status,2, status,0
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1973 ;;      Params:         2       0       0       0       0       0       0
  1974 ;;      Locals:         0       0       0       0       0       0       0
  1975 ;;      Temps:          1       0       0       0       0       0       0
  1976 ;;      Totals:         3       0       0       0       0       0       0
  1977 ;;Total ram usage:        3 bytes
  1978 ;; Hardware stack levels used: 1
  1979 ;; Hardware stack levels required when called: 2
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		_SequenceGenerator
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text9
  1988  000CFE                     __ptext9:
  1989                           	callstack 0
  1990  000CFE                     _delay_ms:
  1991                           	callstack 27
  1992  000CFE                     
  1993                           ;main.c: 59:    while(milliseconds > 0){
  1994  000CFE  EF8C  F006         	goto	l87
  1995  000D02                     l1452:
  1996                           
  1997                           ;main.c: 60:        _delay((unsigned long)((1)*(16000000/4000.0)));
  1998  000D02  0E06               	movlw	6
  1999  000D04  6E0F               	movwf	??_delay_ms^0,c
  2000  000D06  0E30               	movlw	48
  2001  000D08                     u1337:
  2002  000D08  2EE8               	decfsz	wreg,f,c
  2003  000D0A  D7FE               	bra	u1337
  2004  000D0C  2E0F               	decfsz	??_delay_ms^0,f,c
  2005  000D0E  D7FC               	bra	u1337
  2006  000D10  D000               	nop2	
  2007  000D12                     
  2008                           ;main.c: 61:       milliseconds--;
  2009  000D12  060D               	decf	delay_ms@milliseconds^0,f,c
  2010  000D14  A0D8               	btfss	status,0,c
  2011  000D16  060E               	decf	(delay_ms@milliseconds+1)^0,f,c
  2012  000D18                     l87:
  2013                           
  2014                           ;main.c: 59:    while(milliseconds > 0){
  2015  000D18  BE0E               	btfsc	(delay_ms@milliseconds+1)^0,7,c
  2016  000D1A  EF99  F006         	goto	u670
  2017  000D1E  500E               	movf	(delay_ms@milliseconds+1)^0,w,c
  2018  000D20  E106               	bnz	u671
  2019  000D22  040D               	decf	delay_ms@milliseconds^0,w,c
  2020  000D24  B0D8               	btfsc	status,0,c
  2021  000D26  EF97  F006         	goto	u671
  2022  000D2A  EF99  F006         	goto	u670
  2023  000D2E                     u671:
  2024  000D2E  EF81  F006         	goto	l1452
  2025  000D32                     u670:
  2026  000D32  0012               	return		;funcret
  2027  000D34                     __end_of_delay_ms:
  2028                           	callstack 0
  2029                           
  2030 ;; *************** function _isr *****************
  2031 ;; Defined at:
  2032 ;;		line 313 in file "main.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;		None
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;		None
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2046 ;;      Params:         0       0       0       0       0       0       0
  2047 ;;      Locals:         0       0       0       0       0       0       0
  2048 ;;      Temps:          4       0       0       0       0       0       0
  2049 ;;      Totals:         4       0       0       0       0       0       0
  2050 ;;Total ram usage:        4 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; Hardware stack levels required when called: 1
  2053 ;; This function calls:
  2054 ;;		___awdiv
  2055 ;;		___awmod
  2056 ;; This function is called by:
  2057 ;;		Interrupt level 2
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           	psect	intcode
  2062  000008                     __pintcode:
  2063                           	callstack 0
  2064  000008                     _isr:
  2065                           	callstack 26
  2066                           
  2067                           ;incstack = 0
  2068  000008  8269               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2069  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
  2070                           
  2071                           	psect	intcode_body
  2072  000012                     __pintcode_body:
  2073                           	callstack 26
  2074  000012                     int_func:
  2075                           	callstack 26
  2076  000012  0006               	pop		; remove dummy address from shadow register refresh
  2077  000014  CFD9 F00B          	movff	fsr2l,??_isr+2
  2078  000018  CFDA F00C          	movff	fsr2h,??_isr+3
  2079  00001C                     
  2080                           ;main.c: 315:     if (INTCON3bits.INT1IF) {
  2081  00001C  A0F0               	btfss	240,0,c	;volatile
  2082  00001E  EF13  F000         	goto	i2u91_41
  2083  000022  EF15  F000         	goto	i2u91_40
  2084  000026                     i2u91_41:
  2085  000026  EF1A  F000         	goto	i2l1722
  2086  00002A                     i2u91_40:
  2087  00002A                     
  2088                           ;main.c: 316:         start = 1;
  2089  00002A  0E00               	movlw	0
  2090  00002C  6E32               	movwf	(_start+1)^0,c
  2091  00002E  0E01               	movlw	1
  2092  000030  6E31               	movwf	_start^0,c
  2093  000032                     
  2094                           ;main.c: 317:         INTCON3bits.INT1IF = 0;
  2095  000032  90F0               	bcf	240,0,c	;volatile
  2096  000034                     i2l1722:
  2097                           
  2098                           ;main.c: 320:     if(INTCONbits.TMR0IF) {
  2099  000034  A4F2               	btfss	242,2,c	;volatile
  2100  000036  EF1F  F000         	goto	i2u92_41
  2101  00003A  EF21  F000         	goto	i2u92_40
  2102  00003E                     i2u92_41:
  2103  00003E  EF41  F002         	goto	i2l192
  2104  000042                     i2u92_40:
  2105  000042                     
  2106                           ;main.c: 321:         TMR0H = 248;
  2107  000042  0EF8               	movlw	248
  2108  000044  6ED7               	movwf	215,c	;volatile
  2109                           
  2110                           ;main.c: 322:         TMR0L = 48;
  2111  000046  0E30               	movlw	48
  2112  000048  6ED6               	movwf	214,c	;volatile
  2113  00004A                     
  2114                           ;main.c: 324:         if(its_waiting) {
  2115  00004A  5039               	movf	_its_waiting^0,w,c
  2116  00004C  103A               	iorwf	(_its_waiting+1)^0,w,c
  2117  00004E  B4D8               	btfsc	status,2,c
  2118  000050  EF2C  F000         	goto	i2u93_41
  2119  000054  EF2E  F000         	goto	i2u93_40
  2120  000058                     i2u93_41:
  2121  000058  EF4A  F000         	goto	i2l1734
  2122  00005C                     i2u93_40:
  2123  00005C                     
  2124                           ;main.c: 325:             count_timer += 1;
  2125  00005C  4A37               	infsnz	_count_timer^0,f,c
  2126  00005E  2A38               	incf	(_count_timer+1)^0,f,c
  2127  000060                     
  2128                           ;main.c: 326:             if(count_timer == 5000) {
  2129  000060  0E88               	movlw	136
  2130  000062  1837               	xorwf	_count_timer^0,w,c
  2131  000064  E107               	bnz	i2u94_41
  2132  000066  0E13               	movlw	19
  2133  000068  1838               	xorwf	(_count_timer+1)^0,w,c
  2134  00006A  A4D8               	btfss	status,2,c
  2135  00006C  EF3A  F000         	goto	i2u94_41
  2136  000070  EF3C  F000         	goto	i2u94_40
  2137  000074                     i2u94_41:
  2138  000074  EF4E  F000         	goto	i2l1736
  2139  000078                     i2u94_40:
  2140  000078                     
  2141                           ;main.c: 327:                 status_response = 2;
  2142  000078  0E00               	movlw	0
  2143  00007A  6E34               	movwf	(_status_response+1)^0,c
  2144  00007C  0E02               	movlw	2
  2145  00007E  6E33               	movwf	_status_response^0,c
  2146                           
  2147                           ;main.c: 328:                 count_timer = 0;
  2148  000080  0E00               	movlw	0
  2149  000082  6E38               	movwf	(_count_timer+1)^0,c
  2150  000084  0E00               	movlw	0
  2151  000086  6E37               	movwf	_count_timer^0,c
  2152                           
  2153                           ;main.c: 329:                 its_waiting = 0;
  2154  000088  0E00               	movlw	0
  2155  00008A  6E3A               	movwf	(_its_waiting+1)^0,c
  2156  00008C  0E00               	movlw	0
  2157  00008E  6E39               	movwf	_its_waiting^0,c
  2158  000090  EF4E  F000         	goto	i2l1736
  2159  000094                     i2l1734:
  2160                           
  2161                           ;main.c: 332:             count_timer = 0;
  2162  000094  0E00               	movlw	0
  2163  000096  6E38               	movwf	(_count_timer+1)^0,c
  2164  000098  0E00               	movlw	0
  2165  00009A  6E37               	movwf	_count_timer^0,c
  2166  00009C                     i2l1736:
  2167                           
  2168                           ;main.c: 335:         if(!control_input){
  2169  00009C  5061               	movf	_control_input^0,w,c
  2170  00009E  1062               	iorwf	(_control_input+1)^0,w,c
  2171  0000A0  A4D8               	btfss	status,2,c
  2172  0000A2  EF55  F000         	goto	i2u95_41
  2173  0000A6  EF57  F000         	goto	i2u95_40
  2174  0000AA                     i2u95_41:
  2175  0000AA  EFF8  F001         	goto	i2l1850
  2176  0000AE                     i2u95_40:
  2177  0000AE                     
  2178                           ;main.c: 336:             if(PORTAbits.RA0){
  2179  0000AE  A080               	btfss	128,0,c	;volatile
  2180  0000B0  EF5C  F000         	goto	i2u96_41
  2181  0000B4  EF5E  F000         	goto	i2u96_40
  2182  0000B8                     i2u96_41:
  2183  0000B8  EF69  F000         	goto	i2l1744
  2184  0000BC                     i2u96_40:
  2185  0000BC                     
  2186                           ;main.c: 337:                 on_blue = 1;
  2187  0000BC  0E00               	movlw	0
  2188  0000BE  6E42               	movwf	(_on_blue+1)^0,c
  2189  0000C0  0E01               	movlw	1
  2190  0000C2  6E41               	movwf	_on_blue^0,c
  2191                           
  2192                           ;main.c: 338:                 PR2 = 249;
  2193  0000C4  0EF9               	movlw	249
  2194  0000C6  6ECB               	movwf	203,c	;volatile
  2195                           
  2196                           ;main.c: 339:                 CCPR1L = (249/2);
  2197  0000C8  0E7C               	movlw	124
  2198  0000CA  6EBE               	movwf	190,c	;volatile
  2199  0000CC                     
  2200                           ;main.c: 340:                 PORTCbits.RC0 = 1;
  2201  0000CC  8082               	bsf	130,0,c	;volatile
  2202                           
  2203                           ;main.c: 341:             } else{
  2204  0000CE  EFBE  F000         	goto	i2l1766
  2205  0000D2                     i2l1744:
  2206                           
  2207                           ;main.c: 342:                 if(on_blue && wait_timer == 50){
  2208  0000D2  5041               	movf	_on_blue^0,w,c
  2209  0000D4  1042               	iorwf	(_on_blue+1)^0,w,c
  2210  0000D6  B4D8               	btfsc	status,2,c
  2211  0000D8  EF70  F000         	goto	i2u97_41
  2212  0000DC  EF72  F000         	goto	i2u97_40
  2213  0000E0                     i2u97_41:
  2214  0000E0  EFA5  F000         	goto	i2l1760
  2215  0000E4                     i2u97_40:
  2216  0000E4  0E32               	movlw	50
  2217  0000E6  182F               	xorwf	_wait_timer^0,w,c
  2218  0000E8  1030               	iorwf	(_wait_timer+1)^0,w,c
  2219  0000EA  A4D8               	btfss	status,2,c
  2220  0000EC  EF7A  F000         	goto	i2u98_41
  2221  0000F0  EF7C  F000         	goto	i2u98_40
  2222  0000F4                     i2u98_41:
  2223  0000F4  EFA5  F000         	goto	i2l1760
  2224  0000F8                     i2u98_40:
  2225  0000F8                     
  2226                           ;main.c: 343:                     count_timer = 0;
  2227  0000F8  0E00               	movlw	0
  2228  0000FA  6E38               	movwf	(_count_timer+1)^0,c
  2229  0000FC  0E00               	movlw	0
  2230  0000FE  6E37               	movwf	_count_timer^0,c
  2231                           
  2232                           ;main.c: 344:                     on_blue = 0;
  2233  000100  0E00               	movlw	0
  2234  000102  6E42               	movwf	(_on_blue+1)^0,c
  2235  000104  0E00               	movlw	0
  2236  000106  6E41               	movwf	_on_blue^0,c
  2237                           
  2238                           ;main.c: 345:                     CCPR1L = 0;
  2239  000108  0E00               	movlw	0
  2240  00010A  6EBE               	movwf	190,c	;volatile
  2241  00010C                     
  2242                           ;main.c: 346:                     PORTCbits.RC0 = 0;
  2243  00010C  9082               	bcf	130,0,c	;volatile
  2244  00010E                     
  2245                           ;main.c: 347:                     if(sequence[index_input] != 1){
  2246  00010E  90D8               	bcf	status,0,c
  2247  000110  3435               	rlcf	_index_input^0,w,c
  2248  000112  6ED9               	movwf	fsr2l,c
  2249  000114  3436               	rlcf	(_index_input+1)^0,w,c
  2250  000116  6EDA               	movwf	fsr2h,c
  2251  000118  0E80               	movlw	low _sequence
  2252  00011A  26D9               	addwf	fsr2l,f,c
  2253  00011C  0E00               	movlw	high _sequence
  2254  00011E  22DA               	addwfc	fsr2h,f,c
  2255  000120  04DE               	decf	postinc2,w,c
  2256  000122  10DE               	iorwf	postinc2,w,c
  2257  000124  B4D8               	btfsc	status,2,c
  2258  000126  EF97  F000         	goto	i2u99_41
  2259  00012A  EF99  F000         	goto	i2u99_40
  2260  00012E                     i2u99_41:
  2261  00012E  EF9D  F000         	goto	i2l1756
  2262  000132                     i2u99_40:
  2263  000132                     
  2264                           ;main.c: 348:                         status_response = 1;
  2265  000132  0E00               	movlw	0
  2266  000134  6E34               	movwf	(_status_response+1)^0,c
  2267  000136  0E01               	movlw	1
  2268  000138  6E33               	movwf	_status_response^0,c
  2269  00013A                     i2l1756:
  2270                           
  2271                           ;main.c: 350:                     index_input += 1;
  2272  00013A  4A35               	infsnz	_index_input^0,f,c
  2273  00013C  2A36               	incf	(_index_input+1)^0,f,c
  2274  00013E                     
  2275                           ;main.c: 351:                     wait_timer = 0;
  2276  00013E  0E00               	movlw	0
  2277  000140  6E30               	movwf	(_wait_timer+1)^0,c
  2278  000142  0E00               	movlw	0
  2279  000144  6E2F               	movwf	_wait_timer^0,c
  2280                           
  2281                           ;main.c: 352:                 } else if(on_blue && wait_timer < 50) {
  2282  000146  EFBE  F000         	goto	i2l1766
  2283  00014A                     i2l1760:
  2284  00014A  5041               	movf	_on_blue^0,w,c
  2285  00014C  1042               	iorwf	(_on_blue+1)^0,w,c
  2286  00014E  B4D8               	btfsc	status,2,c
  2287  000150  EFAC  F000         	goto	i2u100_41
  2288  000154  EFAE  F000         	goto	i2u100_40
  2289  000158                     i2u100_41:
  2290  000158  EFBE  F000         	goto	i2l1766
  2291  00015C                     i2u100_40:
  2292  00015C  BE30               	btfsc	(_wait_timer+1)^0,7,c
  2293  00015E  EFBC  F000         	goto	i2u101_40
  2294  000162  5030               	movf	(_wait_timer+1)^0,w,c
  2295  000164  E107               	bnz	i2u101_41
  2296  000166  0E32               	movlw	50
  2297  000168  5C2F               	subwf	_wait_timer^0,w,c
  2298  00016A  B0D8               	btfsc	status,0,c
  2299  00016C  EFBA  F000         	goto	i2u101_41
  2300  000170  EFBC  F000         	goto	i2u101_40
  2301  000174                     i2u101_41:
  2302  000174  EFBE  F000         	goto	i2l1766
  2303  000178                     i2u101_40:
  2304  000178                     
  2305                           ;main.c: 353:                     wait_timer += 1;
  2306  000178  4A2F               	infsnz	_wait_timer^0,f,c
  2307  00017A  2A30               	incf	(_wait_timer+1)^0,f,c
  2308  00017C                     i2l1766:
  2309                           
  2310                           ;main.c: 356:             if(PORTAbits.RA2 ){
  2311  00017C  A480               	btfss	128,2,c	;volatile
  2312  00017E  EFC3  F000         	goto	i2u102_41
  2313  000182  EFC5  F000         	goto	i2u102_40
  2314  000186                     i2u102_41:
  2315  000186  EFD0  F000         	goto	i2l1772
  2316  00018A                     i2u102_40:
  2317  00018A                     
  2318                           ;main.c: 357:                 on_green = 1;
  2319  00018A  0E00               	movlw	0
  2320  00018C  6E3E               	movwf	(_on_green+1)^0,c
  2321  00018E  0E01               	movlw	1
  2322  000190  6E3D               	movwf	_on_green^0,c
  2323                           
  2324                           ;main.c: 358:                 PR2 = 166;
  2325  000192  0EA6               	movlw	166
  2326  000194  6ECB               	movwf	203,c	;volatile
  2327                           
  2328                           ;main.c: 359:                 CCPR1L = (166/2);
  2329  000196  0E53               	movlw	83
  2330  000198  6EBE               	movwf	190,c	;volatile
  2331  00019A                     
  2332                           ;main.c: 360:                 PORTCbits.RC3 = 1;
  2333  00019A  8682               	bsf	130,3,c	;volatile
  2334                           
  2335                           ;main.c: 361:             }else{
  2336  00019C  EF26  F001         	goto	i2l1794
  2337  0001A0                     i2l1772:
  2338                           
  2339                           ;main.c: 362:                 if(on_green && wait_timer == 50){
  2340  0001A0  503D               	movf	_on_green^0,w,c
  2341  0001A2  103E               	iorwf	(_on_green+1)^0,w,c
  2342  0001A4  B4D8               	btfsc	status,2,c
  2343  0001A6  EFD7  F000         	goto	i2u103_41
  2344  0001AA  EFD9  F000         	goto	i2u103_40
  2345  0001AE                     i2u103_41:
  2346  0001AE  EF0D  F001         	goto	i2l1788
  2347  0001B2                     i2u103_40:
  2348  0001B2  0E32               	movlw	50
  2349  0001B4  182F               	xorwf	_wait_timer^0,w,c
  2350  0001B6  1030               	iorwf	(_wait_timer+1)^0,w,c
  2351  0001B8  A4D8               	btfss	status,2,c
  2352  0001BA  EFE1  F000         	goto	i2u104_41
  2353  0001BE  EFE3  F000         	goto	i2u104_40
  2354  0001C2                     i2u104_41:
  2355  0001C2  EF0D  F001         	goto	i2l1788
  2356  0001C6                     i2u104_40:
  2357  0001C6                     
  2358                           ;main.c: 363:                     count_timer = 0;
  2359  0001C6  0E00               	movlw	0
  2360  0001C8  6E38               	movwf	(_count_timer+1)^0,c
  2361  0001CA  0E00               	movlw	0
  2362  0001CC  6E37               	movwf	_count_timer^0,c
  2363                           
  2364                           ;main.c: 364:                     on_green = 0;
  2365  0001CE  0E00               	movlw	0
  2366  0001D0  6E3E               	movwf	(_on_green+1)^0,c
  2367  0001D2  0E00               	movlw	0
  2368  0001D4  6E3D               	movwf	_on_green^0,c
  2369                           
  2370                           ;main.c: 365:                     CCPR1L = 0;
  2371  0001D6  0E00               	movlw	0
  2372  0001D8  6EBE               	movwf	190,c	;volatile
  2373  0001DA                     
  2374                           ;main.c: 366:                     PORTCbits.RC3 = 0;
  2375  0001DA  9682               	bcf	130,3,c	;volatile
  2376  0001DC                     
  2377                           ;main.c: 367:                     if(sequence[index_input] != 2){
  2378  0001DC  90D8               	bcf	status,0,c
  2379  0001DE  3435               	rlcf	_index_input^0,w,c
  2380  0001E0  6ED9               	movwf	fsr2l,c
  2381  0001E2  3436               	rlcf	(_index_input+1)^0,w,c
  2382  0001E4  6EDA               	movwf	fsr2h,c
  2383  0001E6  0E80               	movlw	low _sequence
  2384  0001E8  26D9               	addwf	fsr2l,f,c
  2385  0001EA  0E00               	movlw	high _sequence
  2386  0001EC  22DA               	addwfc	fsr2h,f,c
  2387  0001EE  0E02               	movlw	2
  2388  0001F0  18DE               	xorwf	postinc2,w,c
  2389  0001F2  10DE               	iorwf	postinc2,w,c
  2390  0001F4  B4D8               	btfsc	status,2,c
  2391  0001F6  EFFF  F000         	goto	i2u105_41
  2392  0001FA  EF01  F001         	goto	i2u105_40
  2393  0001FE                     i2u105_41:
  2394  0001FE  EF05  F001         	goto	i2l1784
  2395  000202                     i2u105_40:
  2396  000202                     
  2397                           ;main.c: 368:                         status_response = 1;
  2398  000202  0E00               	movlw	0
  2399  000204  6E34               	movwf	(_status_response+1)^0,c
  2400  000206  0E01               	movlw	1
  2401  000208  6E33               	movwf	_status_response^0,c
  2402  00020A                     i2l1784:
  2403                           
  2404                           ;main.c: 370:                     index_input += 1;
  2405  00020A  4A35               	infsnz	_index_input^0,f,c
  2406  00020C  2A36               	incf	(_index_input+1)^0,f,c
  2407  00020E                     
  2408                           ;main.c: 371:                     wait_timer = 0;
  2409  00020E  0E00               	movlw	0
  2410  000210  6E30               	movwf	(_wait_timer+1)^0,c
  2411  000212  0E00               	movlw	0
  2412  000214  6E2F               	movwf	_wait_timer^0,c
  2413                           
  2414                           ;main.c: 372:                 } else if(on_green && wait_timer < 50) {
  2415  000216  EF26  F001         	goto	i2l1794
  2416  00021A                     i2l1788:
  2417  00021A  503D               	movf	_on_green^0,w,c
  2418  00021C  103E               	iorwf	(_on_green+1)^0,w,c
  2419  00021E  B4D8               	btfsc	status,2,c
  2420  000220  EF14  F001         	goto	i2u106_41
  2421  000224  EF16  F001         	goto	i2u106_40
  2422  000228                     i2u106_41:
  2423  000228  EF26  F001         	goto	i2l1794
  2424  00022C                     i2u106_40:
  2425  00022C  BE30               	btfsc	(_wait_timer+1)^0,7,c
  2426  00022E  EF24  F001         	goto	i2u107_40
  2427  000232  5030               	movf	(_wait_timer+1)^0,w,c
  2428  000234  E107               	bnz	i2u107_41
  2429  000236  0E32               	movlw	50
  2430  000238  5C2F               	subwf	_wait_timer^0,w,c
  2431  00023A  B0D8               	btfsc	status,0,c
  2432  00023C  EF22  F001         	goto	i2u107_41
  2433  000240  EF24  F001         	goto	i2u107_40
  2434  000244                     i2u107_41:
  2435  000244  EF26  F001         	goto	i2l1794
  2436  000248                     i2u107_40:
  2437  000248                     
  2438                           ;main.c: 373:                     wait_timer += 1;
  2439  000248  4A2F               	infsnz	_wait_timer^0,f,c
  2440  00024A  2A30               	incf	(_wait_timer+1)^0,f,c
  2441  00024C                     i2l1794:
  2442                           
  2443                           ;main.c: 376:             if(PORTAbits.RA3){
  2444  00024C  A680               	btfss	128,3,c	;volatile
  2445  00024E  EF2B  F001         	goto	i2u108_41
  2446  000252  EF2D  F001         	goto	i2u108_40
  2447  000256                     i2u108_41:
  2448  000256  EF38  F001         	goto	i2l1800
  2449  00025A                     i2u108_40:
  2450  00025A                     
  2451                           ;main.c: 377:                 on_red = 1;
  2452  00025A  0E00               	movlw	0
  2453  00025C  6E3C               	movwf	(_on_red+1)^0,c
  2454  00025E  0E01               	movlw	1
  2455  000260  6E3B               	movwf	_on_red^0,c
  2456                           
  2457                           ;main.c: 378:                 PR2 = 124;
  2458  000262  0E7C               	movlw	124
  2459  000264  6ECB               	movwf	203,c	;volatile
  2460                           
  2461                           ;main.c: 379:                 CCPR1L = (124/2);
  2462  000266  0E3E               	movlw	62
  2463  000268  6EBE               	movwf	190,c	;volatile
  2464  00026A                     
  2465                           ;main.c: 380:                 PORTCbits.RC4 = 1;
  2466  00026A  8882               	bsf	130,4,c	;volatile
  2467                           
  2468                           ;main.c: 381:             }else{
  2469  00026C  EF8E  F001         	goto	i2l1822
  2470  000270                     i2l1800:
  2471                           
  2472                           ;main.c: 382:                 if(on_red && wait_timer == 50) {
  2473  000270  503B               	movf	_on_red^0,w,c
  2474  000272  103C               	iorwf	(_on_red+1)^0,w,c
  2475  000274  B4D8               	btfsc	status,2,c
  2476  000276  EF3F  F001         	goto	i2u109_41
  2477  00027A  EF41  F001         	goto	i2u109_40
  2478  00027E                     i2u109_41:
  2479  00027E  EF75  F001         	goto	i2l1816
  2480  000282                     i2u109_40:
  2481  000282  0E32               	movlw	50
  2482  000284  182F               	xorwf	_wait_timer^0,w,c
  2483  000286  1030               	iorwf	(_wait_timer+1)^0,w,c
  2484  000288  A4D8               	btfss	status,2,c
  2485  00028A  EF49  F001         	goto	i2u110_41
  2486  00028E  EF4B  F001         	goto	i2u110_40
  2487  000292                     i2u110_41:
  2488  000292  EF75  F001         	goto	i2l1816
  2489  000296                     i2u110_40:
  2490  000296                     
  2491                           ;main.c: 383:                     count_timer = 0;
  2492  000296  0E00               	movlw	0
  2493  000298  6E38               	movwf	(_count_timer+1)^0,c
  2494  00029A  0E00               	movlw	0
  2495  00029C  6E37               	movwf	_count_timer^0,c
  2496                           
  2497                           ;main.c: 384:                     CCPR1L = 0;
  2498  00029E  0E00               	movlw	0
  2499  0002A0  6EBE               	movwf	190,c	;volatile
  2500  0002A2                     
  2501                           ;main.c: 385:                     PORTCbits.RC4 = 0;
  2502  0002A2  9882               	bcf	130,4,c	;volatile
  2503                           
  2504                           ;main.c: 386:                     on_red = 0;
  2505  0002A4  0E00               	movlw	0
  2506  0002A6  6E3C               	movwf	(_on_red+1)^0,c
  2507  0002A8  0E00               	movlw	0
  2508  0002AA  6E3B               	movwf	_on_red^0,c
  2509  0002AC                     
  2510                           ;main.c: 387:                     if(sequence[index_input] != 3){
  2511  0002AC  90D8               	bcf	status,0,c
  2512  0002AE  3435               	rlcf	_index_input^0,w,c
  2513  0002B0  6ED9               	movwf	fsr2l,c
  2514  0002B2  3436               	rlcf	(_index_input+1)^0,w,c
  2515  0002B4  6EDA               	movwf	fsr2h,c
  2516  0002B6  0E80               	movlw	low _sequence
  2517  0002B8  26D9               	addwf	fsr2l,f,c
  2518  0002BA  0E00               	movlw	high _sequence
  2519  0002BC  22DA               	addwfc	fsr2h,f,c
  2520  0002BE  0E03               	movlw	3
  2521  0002C0  18DE               	xorwf	postinc2,w,c
  2522  0002C2  10DE               	iorwf	postinc2,w,c
  2523  0002C4  B4D8               	btfsc	status,2,c
  2524  0002C6  EF67  F001         	goto	i2u111_41
  2525  0002CA  EF69  F001         	goto	i2u111_40
  2526  0002CE                     i2u111_41:
  2527  0002CE  EF6D  F001         	goto	i2l1812
  2528  0002D2                     i2u111_40:
  2529  0002D2                     
  2530                           ;main.c: 388:                         status_response = 1;
  2531  0002D2  0E00               	movlw	0
  2532  0002D4  6E34               	movwf	(_status_response+1)^0,c
  2533  0002D6  0E01               	movlw	1
  2534  0002D8  6E33               	movwf	_status_response^0,c
  2535  0002DA                     i2l1812:
  2536                           
  2537                           ;main.c: 390:                     index_input += 1;
  2538  0002DA  4A35               	infsnz	_index_input^0,f,c
  2539  0002DC  2A36               	incf	(_index_input+1)^0,f,c
  2540  0002DE                     
  2541                           ;main.c: 391:                     wait_timer = 0;
  2542  0002DE  0E00               	movlw	0
  2543  0002E0  6E30               	movwf	(_wait_timer+1)^0,c
  2544  0002E2  0E00               	movlw	0
  2545  0002E4  6E2F               	movwf	_wait_timer^0,c
  2546                           
  2547                           ;main.c: 392:                 } else if(on_red && wait_timer < 50) {
  2548  0002E6  EF8E  F001         	goto	i2l1822
  2549  0002EA                     i2l1816:
  2550  0002EA  503B               	movf	_on_red^0,w,c
  2551  0002EC  103C               	iorwf	(_on_red+1)^0,w,c
  2552  0002EE  B4D8               	btfsc	status,2,c
  2553  0002F0  EF7C  F001         	goto	i2u112_41
  2554  0002F4  EF7E  F001         	goto	i2u112_40
  2555  0002F8                     i2u112_41:
  2556  0002F8  EF8E  F001         	goto	i2l1822
  2557  0002FC                     i2u112_40:
  2558  0002FC  BE30               	btfsc	(_wait_timer+1)^0,7,c
  2559  0002FE  EF8C  F001         	goto	i2u113_40
  2560  000302  5030               	movf	(_wait_timer+1)^0,w,c
  2561  000304  E107               	bnz	i2u113_41
  2562  000306  0E32               	movlw	50
  2563  000308  5C2F               	subwf	_wait_timer^0,w,c
  2564  00030A  B0D8               	btfsc	status,0,c
  2565  00030C  EF8A  F001         	goto	i2u113_41
  2566  000310  EF8C  F001         	goto	i2u113_40
  2567  000314                     i2u113_41:
  2568  000314  EF8E  F001         	goto	i2l1822
  2569  000318                     i2u113_40:
  2570  000318                     
  2571                           ;main.c: 393:                     wait_timer += 1;
  2572  000318  4A2F               	infsnz	_wait_timer^0,f,c
  2573  00031A  2A30               	incf	(_wait_timer+1)^0,f,c
  2574  00031C                     i2l1822:
  2575                           
  2576                           ;main.c: 396:             if(PORTAbits.RA1){
  2577  00031C  A280               	btfss	128,1,c	;volatile
  2578  00031E  EF93  F001         	goto	i2u114_41
  2579  000322  EF95  F001         	goto	i2u114_40
  2580  000326                     i2u114_41:
  2581  000326  EFA0  F001         	goto	i2l1828
  2582  00032A                     i2u114_40:
  2583  00032A                     
  2584                           ;main.c: 397:                 on_yellow = 1;
  2585  00032A  0E00               	movlw	0
  2586  00032C  6E40               	movwf	(_on_yellow+1)^0,c
  2587  00032E  0E01               	movlw	1
  2588  000330  6E3F               	movwf	_on_yellow^0,c
  2589                           
  2590                           ;main.c: 398:                 PR2 = 199;
  2591  000332  0EC7               	movlw	199
  2592  000334  6ECB               	movwf	203,c	;volatile
  2593                           
  2594                           ;main.c: 399:                 CCPR1L = (199/2);
  2595  000336  0E63               	movlw	99
  2596  000338  6EBE               	movwf	190,c	;volatile
  2597  00033A                     
  2598                           ;main.c: 400:                 PORTCbits.RC1 = 1;
  2599  00033A  8282               	bsf	130,1,c	;volatile
  2600                           
  2601                           ;main.c: 401:             }else{
  2602  00033C  EFF8  F001         	goto	i2l1850
  2603  000340                     i2l1828:
  2604                           
  2605                           ;main.c: 402:                 if(on_yellow && wait_timer == 50){
  2606  000340  503F               	movf	_on_yellow^0,w,c
  2607  000342  1040               	iorwf	(_on_yellow+1)^0,w,c
  2608  000344  B4D8               	btfsc	status,2,c
  2609  000346  EFA7  F001         	goto	i2u115_41
  2610  00034A  EFA9  F001         	goto	i2u115_40
  2611  00034E                     i2u115_41:
  2612  00034E  EFDD  F001         	goto	i2l1844
  2613  000352                     i2u115_40:
  2614  000352  0E32               	movlw	50
  2615  000354  182F               	xorwf	_wait_timer^0,w,c
  2616  000356  1030               	iorwf	(_wait_timer+1)^0,w,c
  2617  000358  A4D8               	btfss	status,2,c
  2618  00035A  EFB1  F001         	goto	i2u116_41
  2619  00035E  EFB3  F001         	goto	i2u116_40
  2620  000362                     i2u116_41:
  2621  000362  EFDD  F001         	goto	i2l1844
  2622  000366                     i2u116_40:
  2623  000366                     
  2624                           ;main.c: 403:                     count_timer = 0;
  2625  000366  0E00               	movlw	0
  2626  000368  6E38               	movwf	(_count_timer+1)^0,c
  2627  00036A  0E00               	movlw	0
  2628  00036C  6E37               	movwf	_count_timer^0,c
  2629                           
  2630                           ;main.c: 404:                     on_yellow = 0;
  2631  00036E  0E00               	movlw	0
  2632  000370  6E40               	movwf	(_on_yellow+1)^0,c
  2633  000372  0E00               	movlw	0
  2634  000374  6E3F               	movwf	_on_yellow^0,c
  2635                           
  2636                           ;main.c: 405:                     CCPR1L = 0;
  2637  000376  0E00               	movlw	0
  2638  000378  6EBE               	movwf	190,c	;volatile
  2639  00037A                     
  2640                           ;main.c: 406:                     PORTCbits.RC1 = 0;
  2641  00037A  9282               	bcf	130,1,c	;volatile
  2642  00037C                     
  2643                           ;main.c: 407:                     if(sequence[index_input] != 4){
  2644  00037C  90D8               	bcf	status,0,c
  2645  00037E  3435               	rlcf	_index_input^0,w,c
  2646  000380  6ED9               	movwf	fsr2l,c
  2647  000382  3436               	rlcf	(_index_input+1)^0,w,c
  2648  000384  6EDA               	movwf	fsr2h,c
  2649  000386  0E80               	movlw	low _sequence
  2650  000388  26D9               	addwf	fsr2l,f,c
  2651  00038A  0E00               	movlw	high _sequence
  2652  00038C  22DA               	addwfc	fsr2h,f,c
  2653  00038E  0E04               	movlw	4
  2654  000390  18DE               	xorwf	postinc2,w,c
  2655  000392  10DE               	iorwf	postinc2,w,c
  2656  000394  B4D8               	btfsc	status,2,c
  2657  000396  EFCF  F001         	goto	i2u117_41
  2658  00039A  EFD1  F001         	goto	i2u117_40
  2659  00039E                     i2u117_41:
  2660  00039E  EFD5  F001         	goto	i2l1840
  2661  0003A2                     i2u117_40:
  2662  0003A2                     
  2663                           ;main.c: 408:                         status_response = 1;
  2664  0003A2  0E00               	movlw	0
  2665  0003A4  6E34               	movwf	(_status_response+1)^0,c
  2666  0003A6  0E01               	movlw	1
  2667  0003A8  6E33               	movwf	_status_response^0,c
  2668  0003AA                     i2l1840:
  2669                           
  2670                           ;main.c: 410:                     index_input += 1;
  2671  0003AA  4A35               	infsnz	_index_input^0,f,c
  2672  0003AC  2A36               	incf	(_index_input+1)^0,f,c
  2673  0003AE                     
  2674                           ;main.c: 411:                     wait_timer = 0;
  2675  0003AE  0E00               	movlw	0
  2676  0003B0  6E30               	movwf	(_wait_timer+1)^0,c
  2677  0003B2  0E00               	movlw	0
  2678  0003B4  6E2F               	movwf	_wait_timer^0,c
  2679                           
  2680                           ;main.c: 412:                 } else if(on_yellow && wait_timer < 50) {
  2681  0003B6  EFF8  F001         	goto	i2l1850
  2682  0003BA                     i2l1844:
  2683  0003BA  503F               	movf	_on_yellow^0,w,c
  2684  0003BC  1040               	iorwf	(_on_yellow+1)^0,w,c
  2685  0003BE  B4D8               	btfsc	status,2,c
  2686  0003C0  EFE4  F001         	goto	i2u118_41
  2687  0003C4  EFE6  F001         	goto	i2u118_40
  2688  0003C8                     i2u118_41:
  2689  0003C8  EFF8  F001         	goto	i2l184
  2690  0003CC                     i2u118_40:
  2691  0003CC  BE30               	btfsc	(_wait_timer+1)^0,7,c
  2692  0003CE  EFF4  F001         	goto	i2u119_40
  2693  0003D2  5030               	movf	(_wait_timer+1)^0,w,c
  2694  0003D4  E107               	bnz	i2u119_41
  2695  0003D6  0E32               	movlw	50
  2696  0003D8  5C2F               	subwf	_wait_timer^0,w,c
  2697  0003DA  B0D8               	btfsc	status,0,c
  2698  0003DC  EFF2  F001         	goto	i2u119_41
  2699  0003E0  EFF4  F001         	goto	i2u119_40
  2700  0003E4                     i2u119_41:
  2701  0003E4  EFF8  F001         	goto	i2l184
  2702  0003E8                     i2u119_40:
  2703  0003E8                     
  2704                           ;main.c: 413:                     wait_timer += 1;
  2705  0003E8  4A2F               	infsnz	_wait_timer^0,f,c
  2706  0003EA  2A30               	incf	(_wait_timer+1)^0,f,c
  2707  0003EC  EFF8  F001         	goto	i2l1850
  2708  0003F0                     i2l184:
  2709  0003F0                     i2l1850:
  2710                           
  2711                           ;main.c: 418:         if(disp == 0) {
  2712  0003F0  5047               	movf	_disp^0,w,c
  2713  0003F2  1048               	iorwf	(_disp+1)^0,w,c
  2714  0003F4  A4D8               	btfss	status,2,c
  2715  0003F6  EFFF  F001         	goto	i2u120_41
  2716  0003FA  EF01  F002         	goto	i2u120_40
  2717  0003FE                     i2u120_41:
  2718  0003FE  EF1C  F002         	goto	i2l1860
  2719  000402                     i2u120_40:
  2720  000402                     
  2721                           ;main.c: 419:             PORTBbits.RB6 = 0;
  2722  000402  9C81               	bcf	129,6,c	;volatile
  2723  000404                     
  2724                           ;main.c: 420:             PORTD = displayNumber[dispValue%10];
  2725  000404  C049  F001         	movff	_dispValue,___awmod@dividend
  2726  000408  C04A  F002         	movff	_dispValue+1,___awmod@dividend+1
  2727  00040C  0E00               	movlw	0
  2728  00040E  6E04               	movwf	(___awmod@divisor+1)^0,c
  2729  000410  0E0A               	movlw	10
  2730  000412  6E03               	movwf	___awmod@divisor^0,c
  2731  000414  EC69  F005         	call	___awmod	;wreg free
  2732  000418  90D8               	bcf	status,0,c
  2733  00041A  3601               	rlcf	?___awmod^0,f,c
  2734  00041C  3602               	rlcf	(?___awmod+1)^0,f,c
  2735  00041E  0E4B               	movlw	low _displayNumber
  2736  000420  2401               	addwf	?___awmod^0,w,c
  2737  000422  6ED9               	movwf	fsr2l,c
  2738  000424  0E00               	movlw	high _displayNumber
  2739  000426  2002               	addwfc	(?___awmod+1)^0,w,c
  2740  000428  6EDA               	movwf	fsr2h,c
  2741  00042A  50DF               	movf	indf2,w,c
  2742  00042C  6E83               	movwf	131,c	;volatile
  2743  00042E                     
  2744                           ;main.c: 421:             PORTBbits.RB7 = 1;
  2745  00042E  8E81               	bsf	129,7,c	;volatile
  2746  000430                     
  2747                           ;main.c: 422:             disp++;
  2748  000430  4A47               	infsnz	_disp^0,f,c
  2749  000432  2A48               	incf	(_disp+1)^0,f,c
  2750                           
  2751                           ;main.c: 423:         }
  2752  000434  EF40  F002         	goto	i2l1870
  2753  000438                     i2l1860:
  2754  000438  0447               	decf	_disp^0,w,c
  2755  00043A  1048               	iorwf	(_disp+1)^0,w,c
  2756  00043C  A4D8               	btfss	status,2,c
  2757  00043E  EF23  F002         	goto	i2u121_41
  2758  000442  EF25  F002         	goto	i2u121_40
  2759  000446                     i2u121_41:
  2760  000446  EF40  F002         	goto	i2l1870
  2761  00044A                     i2u121_40:
  2762  00044A                     
  2763                           ;main.c: 425:             PORTBbits.RB7 = 0;
  2764  00044A  9E81               	bcf	129,7,c	;volatile
  2765  00044C                     
  2766                           ;main.c: 426:             PORTD = displayNumber[dispValue/10];
  2767  00044C  C049  F001         	movff	_dispValue,___awdiv@dividend
  2768  000450  C04A  F002         	movff	_dispValue+1,___awdiv@dividend+1
  2769  000454  0E00               	movlw	0
  2770  000456  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2771  000458  0E0A               	movlw	10
  2772  00045A  6E03               	movwf	___awdiv@divisor^0,c
  2773  00045C  EC07  F005         	call	___awdiv	;wreg free
  2774  000460  90D8               	bcf	status,0,c
  2775  000462  3601               	rlcf	?___awdiv^0,f,c
  2776  000464  3602               	rlcf	(?___awdiv+1)^0,f,c
  2777  000466  0E4B               	movlw	low _displayNumber
  2778  000468  2401               	addwf	?___awdiv^0,w,c
  2779  00046A  6ED9               	movwf	fsr2l,c
  2780  00046C  0E00               	movlw	high _displayNumber
  2781  00046E  2002               	addwfc	(?___awdiv+1)^0,w,c
  2782  000470  6EDA               	movwf	fsr2h,c
  2783  000472  50DF               	movf	indf2,w,c
  2784  000474  6E83               	movwf	131,c	;volatile
  2785  000476                     
  2786                           ;main.c: 427:             PORTBbits.RB6 = 1;
  2787  000476  8C81               	bsf	129,6,c	;volatile
  2788  000478                     
  2789                           ;main.c: 428:             disp = 0;
  2790  000478  0E00               	movlw	0
  2791  00047A  6E48               	movwf	(_disp+1)^0,c
  2792  00047C  0E00               	movlw	0
  2793  00047E  6E47               	movwf	_disp^0,c
  2794  000480                     i2l1870:
  2795                           
  2796                           ;main.c: 430:         INTCONbits.TMR0IF = 0;
  2797  000480  94F2               	bcf	242,2,c	;volatile
  2798  000482                     i2l192:
  2799  000482  C00C  FFDA         	movff	??_isr+3,fsr2h
  2800  000486  C00B  FFD9         	movff	??_isr+2,fsr2l
  2801  00048A  9269               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2802  00048C  0011               	retfie		f
  2803  00048E                     __end_of_isr:
  2804                           	callstack 0
  2805                           
  2806 ;; *************** function ___awmod *****************
  2807 ;; Defined at:
  2808 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  dividend        2    0[COMRAM] int 
  2811 ;;  divisor         2    2[COMRAM] int 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  sign            1    5[COMRAM] unsigned char 
  2814 ;;  counter         1    4[COMRAM] unsigned char 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  2    0[COMRAM] int 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2824 ;;      Params:         4       0       0       0       0       0       0
  2825 ;;      Locals:         2       0       0       0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0
  2827 ;;      Totals:         6       0       0       0       0       0       0
  2828 ;;Total ram usage:        6 bytes
  2829 ;; Hardware stack levels used: 1
  2830 ;; This function calls:
  2831 ;;		Nothing
  2832 ;; This function is called by:
  2833 ;;		_isr
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           	psect	text11
  2838  000AD2                     __ptext11:
  2839                           	callstack 0
  2840  000AD2                     ___awmod:
  2841                           	callstack 26
  2842  000AD2  0E00               	movlw	0
  2843  000AD4  6E06               	movwf	___awmod@sign^0,c
  2844  000AD6  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2845  000AD8  EF72  F005         	goto	i2u79_40
  2846  000ADC  EF70  F005         	goto	i2u79_41
  2847  000AE0                     i2u79_41:
  2848  000AE0  EF78  F005         	goto	i2l1584
  2849  000AE4                     i2u79_40:
  2850  000AE4  6C01               	negf	___awmod@dividend^0,c
  2851  000AE6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2852  000AE8  B0D8               	btfsc	status,0,c
  2853  000AEA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2854  000AEC  0E01               	movlw	1
  2855  000AEE  6E06               	movwf	___awmod@sign^0,c
  2856  000AF0                     i2l1584:
  2857  000AF0  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2858  000AF2  EF7F  F005         	goto	i2u80_40
  2859  000AF6  EF7D  F005         	goto	i2u80_41
  2860  000AFA                     i2u80_41:
  2861  000AFA  EF83  F005         	goto	i2l1588
  2862  000AFE                     i2u80_40:
  2863  000AFE  6C03               	negf	___awmod@divisor^0,c
  2864  000B00  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2865  000B02  B0D8               	btfsc	status,0,c
  2866  000B04  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2867  000B06                     i2l1588:
  2868  000B06  5003               	movf	___awmod@divisor^0,w,c
  2869  000B08  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2870  000B0A  B4D8               	btfsc	status,2,c
  2871  000B0C  EF8A  F005         	goto	i2u81_41
  2872  000B10  EF8C  F005         	goto	i2u81_40
  2873  000B14                     i2u81_41:
  2874  000B14  EFB0  F005         	goto	i2l1604
  2875  000B18                     i2u81_40:
  2876  000B18  0E01               	movlw	1
  2877  000B1A  6E05               	movwf	___awmod@counter^0,c
  2878  000B1C  EF94  F005         	goto	i2l1594
  2879  000B20                     i2l1592:
  2880  000B20  90D8               	bcf	status,0,c
  2881  000B22  3603               	rlcf	___awmod@divisor^0,f,c
  2882  000B24  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2883  000B26  2A05               	incf	___awmod@counter^0,f,c
  2884  000B28                     i2l1594:
  2885  000B28  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2886  000B2A  EF99  F005         	goto	i2u82_41
  2887  000B2E  EF9B  F005         	goto	i2u82_40
  2888  000B32                     i2u82_41:
  2889  000B32  EF90  F005         	goto	i2l1592
  2890  000B36                     i2u82_40:
  2891  000B36                     i2l1596:
  2892  000B36  5003               	movf	___awmod@divisor^0,w,c
  2893  000B38  5C01               	subwf	___awmod@dividend^0,w,c
  2894  000B3A  5004               	movf	(___awmod@divisor+1)^0,w,c
  2895  000B3C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2896  000B3E  A0D8               	btfss	status,0,c
  2897  000B40  EFA4  F005         	goto	i2u83_41
  2898  000B44  EFA6  F005         	goto	i2u83_40
  2899  000B48                     i2u83_41:
  2900  000B48  EFAA  F005         	goto	i2l1600
  2901  000B4C                     i2u83_40:
  2902  000B4C  5003               	movf	___awmod@divisor^0,w,c
  2903  000B4E  5E01               	subwf	___awmod@dividend^0,f,c
  2904  000B50  5004               	movf	(___awmod@divisor+1)^0,w,c
  2905  000B52  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2906  000B54                     i2l1600:
  2907  000B54  90D8               	bcf	status,0,c
  2908  000B56  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2909  000B58  3203               	rrcf	___awmod@divisor^0,f,c
  2910  000B5A  2E05               	decfsz	___awmod@counter^0,f,c
  2911  000B5C  EF9B  F005         	goto	i2l1596
  2912  000B60                     i2l1604:
  2913  000B60  5006               	movf	___awmod@sign^0,w,c
  2914  000B62  B4D8               	btfsc	status,2,c
  2915  000B64  EFB6  F005         	goto	i2u84_41
  2916  000B68  EFB8  F005         	goto	i2u84_40
  2917  000B6C                     i2u84_41:
  2918  000B6C  EFBC  F005         	goto	i2l1608
  2919  000B70                     i2u84_40:
  2920  000B70  6C01               	negf	___awmod@dividend^0,c
  2921  000B72  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2922  000B74  B0D8               	btfsc	status,0,c
  2923  000B76  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2924  000B78                     i2l1608:
  2925  000B78  C001  F001         	movff	___awmod@dividend,?___awmod
  2926  000B7C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2927  000B80  0012               	return		;funcret
  2928  000B82                     __end_of___awmod:
  2929                           	callstack 0
  2930                           
  2931 ;; *************** function ___awdiv *****************
  2932 ;; Defined at:
  2933 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  dividend        2    0[COMRAM] int 
  2936 ;;  divisor         2    2[COMRAM] int 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;  quotient        2    6[COMRAM] int 
  2939 ;;  sign            1    5[COMRAM] unsigned char 
  2940 ;;  counter         1    4[COMRAM] unsigned char 
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  2    0[COMRAM] int 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2, status,0
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2950 ;;      Params:         4       0       0       0       0       0       0
  2951 ;;      Locals:         4       0       0       0       0       0       0
  2952 ;;      Temps:          0       0       0       0       0       0       0
  2953 ;;      Totals:         8       0       0       0       0       0       0
  2954 ;;Total ram usage:        8 bytes
  2955 ;; Hardware stack levels used: 1
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_isr
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text12
  2964  000A0E                     __ptext12:
  2965                           	callstack 0
  2966  000A0E                     ___awdiv:
  2967                           	callstack 26
  2968  000A0E  0E00               	movlw	0
  2969  000A10  6E06               	movwf	___awdiv@sign^0,c
  2970  000A12  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2971  000A14  EF10  F005         	goto	i2u73_40
  2972  000A18  EF0E  F005         	goto	i2u73_41
  2973  000A1C                     i2u73_41:
  2974  000A1C  EF16  F005         	goto	i2l1540
  2975  000A20                     i2u73_40:
  2976  000A20  6C03               	negf	___awdiv@divisor^0,c
  2977  000A22  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2978  000A24  B0D8               	btfsc	status,0,c
  2979  000A26  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2980  000A28  0E01               	movlw	1
  2981  000A2A  6E06               	movwf	___awdiv@sign^0,c
  2982  000A2C                     i2l1540:
  2983  000A2C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2984  000A2E  EF1D  F005         	goto	i2u74_40
  2985  000A32  EF1B  F005         	goto	i2u74_41
  2986  000A36                     i2u74_41:
  2987  000A36  EF23  F005         	goto	i2l1546
  2988  000A3A                     i2u74_40:
  2989  000A3A  6C01               	negf	___awdiv@dividend^0,c
  2990  000A3C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2991  000A3E  B0D8               	btfsc	status,0,c
  2992  000A40  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2993  000A42  0E01               	movlw	1
  2994  000A44  1A06               	xorwf	___awdiv@sign^0,f,c
  2995  000A46                     i2l1546:
  2996  000A46  0E00               	movlw	0
  2997  000A48  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2998  000A4A  0E00               	movlw	0
  2999  000A4C  6E07               	movwf	___awdiv@quotient^0,c
  3000  000A4E  5003               	movf	___awdiv@divisor^0,w,c
  3001  000A50  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3002  000A52  B4D8               	btfsc	status,2,c
  3003  000A54  EF2E  F005         	goto	i2u75_41
  3004  000A58  EF30  F005         	goto	i2u75_40
  3005  000A5C                     i2u75_41:
  3006  000A5C  EF58  F005         	goto	i2l1568
  3007  000A60                     i2u75_40:
  3008  000A60  0E01               	movlw	1
  3009  000A62  6E05               	movwf	___awdiv@counter^0,c
  3010  000A64  EF38  F005         	goto	i2l1554
  3011  000A68                     i2l1552:
  3012  000A68  90D8               	bcf	status,0,c
  3013  000A6A  3603               	rlcf	___awdiv@divisor^0,f,c
  3014  000A6C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3015  000A6E  2A05               	incf	___awdiv@counter^0,f,c
  3016  000A70                     i2l1554:
  3017  000A70  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3018  000A72  EF3D  F005         	goto	i2u76_41
  3019  000A76  EF3F  F005         	goto	i2u76_40
  3020  000A7A                     i2u76_41:
  3021  000A7A  EF34  F005         	goto	i2l1552
  3022  000A7E                     i2u76_40:
  3023  000A7E                     i2l1556:
  3024  000A7E  90D8               	bcf	status,0,c
  3025  000A80  3607               	rlcf	___awdiv@quotient^0,f,c
  3026  000A82  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3027  000A84  5003               	movf	___awdiv@divisor^0,w,c
  3028  000A86  5C01               	subwf	___awdiv@dividend^0,w,c
  3029  000A88  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3030  000A8A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3031  000A8C  A0D8               	btfss	status,0,c
  3032  000A8E  EF4B  F005         	goto	i2u77_41
  3033  000A92  EF4D  F005         	goto	i2u77_40
  3034  000A96                     i2u77_41:
  3035  000A96  EF52  F005         	goto	i2l1564
  3036  000A9A                     i2u77_40:
  3037  000A9A  5003               	movf	___awdiv@divisor^0,w,c
  3038  000A9C  5E01               	subwf	___awdiv@dividend^0,f,c
  3039  000A9E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3040  000AA0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3041  000AA2  8007               	bsf	___awdiv@quotient^0,0,c
  3042  000AA4                     i2l1564:
  3043  000AA4  90D8               	bcf	status,0,c
  3044  000AA6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3045  000AA8  3203               	rrcf	___awdiv@divisor^0,f,c
  3046  000AAA  2E05               	decfsz	___awdiv@counter^0,f,c
  3047  000AAC  EF3F  F005         	goto	i2l1556
  3048  000AB0                     i2l1568:
  3049  000AB0  5006               	movf	___awdiv@sign^0,w,c
  3050  000AB2  B4D8               	btfsc	status,2,c
  3051  000AB4  EF5E  F005         	goto	i2u78_41
  3052  000AB8  EF60  F005         	goto	i2u78_40
  3053  000ABC                     i2u78_41:
  3054  000ABC  EF64  F005         	goto	i2l1572
  3055  000AC0                     i2u78_40:
  3056  000AC0  6C07               	negf	___awdiv@quotient^0,c
  3057  000AC2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3058  000AC4  B0D8               	btfsc	status,0,c
  3059  000AC6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3060  000AC8                     i2l1572:
  3061  000AC8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3062  000ACC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3063  000AD0  0012               	return		;funcret
  3064  000AD2                     __end_of___awdiv:
  3065                           	callstack 0
  3066  0000                     
  3067                           	psect	rparam
  3068  0000                     
  3069                           	psect	temp
  3070  000069                     btemp:
  3071                           	callstack 0
  3072  000069                     	ds	1
  3073  0000                     int$flags	set	btemp
  3074  0000                     wtemp8	set	btemp+1
  3075  0000                     ttemp5	set	btemp+1
  3076  0000                     ttemp6	set	btemp+4
  3077  0000                     ttemp7	set	btemp+8
  3078                           
  3079                           	psect	idloc
  3080                           
  3081                           ;Config register IDLOC0 @ 0x200000
  3082                           ;	unspecified, using default values
  3083  200000                     	org	2097152
  3084  200000  FF                 	db	255
  3085                           
  3086                           ;Config register IDLOC1 @ 0x200001
  3087                           ;	unspecified, using default values
  3088  200001                     	org	2097153
  3089  200001  FF                 	db	255
  3090                           
  3091                           ;Config register IDLOC2 @ 0x200002
  3092                           ;	unspecified, using default values
  3093  200002                     	org	2097154
  3094  200002  FF                 	db	255
  3095                           
  3096                           ;Config register IDLOC3 @ 0x200003
  3097                           ;	unspecified, using default values
  3098  200003                     	org	2097155
  3099  200003  FF                 	db	255
  3100                           
  3101                           ;Config register IDLOC4 @ 0x200004
  3102                           ;	unspecified, using default values
  3103  200004                     	org	2097156
  3104  200004  FF                 	db	255
  3105                           
  3106                           ;Config register IDLOC5 @ 0x200005
  3107                           ;	unspecified, using default values
  3108  200005                     	org	2097157
  3109  200005  FF                 	db	255
  3110                           
  3111                           ;Config register IDLOC6 @ 0x200006
  3112                           ;	unspecified, using default values
  3113  200006                     	org	2097158
  3114  200006  FF                 	db	255
  3115                           
  3116                           ;Config register IDLOC7 @ 0x200007
  3117                           ;	unspecified, using default values
  3118  200007                     	org	2097159
  3119  200007  FF                 	db	255
  3120                           
  3121                           	psect	config
  3122                           
  3123                           ; Padding undefined space
  3124  300000                     	org	3145728
  3125  300000  FF                 	db	255
  3126                           
  3127                           ;Config register CONFIG1H @ 0x300001
  3128                           ;	Oscillator Selection bits
  3129                           ;	OSC = HS, HS oscillator
  3130                           ;	Fail-Safe Clock Monitor Enable bit
  3131                           ;	FCMEN = 0x0, unprogrammed default
  3132                           ;	Internal/External Oscillator Switchover bit
  3133                           ;	IESO = 0x0, unprogrammed default
  3134  300001                     	org	3145729
  3135  300001  02                 	db	2
  3136                           
  3137                           ;Config register CONFIG2L @ 0x300002
  3138                           ;	Power-up Timer Enable bit
  3139                           ;	PWRT = 0x1, unprogrammed default
  3140                           ;	Brown-out Reset Enable bits
  3141                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3142                           ;	Brown Out Reset Voltage bits
  3143                           ;	BORV = 0x3, unprogrammed default
  3144  300002                     	org	3145730
  3145  300002  19                 	db	25
  3146                           
  3147                           ;Config register CONFIG2H @ 0x300003
  3148                           ;	Watchdog Timer Enable bit
  3149                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3150                           ;	Watchdog Timer Postscale Select bits
  3151                           ;	WDTPS = 0xF, unprogrammed default
  3152  300003                     	org	3145731
  3153  300003  1E                 	db	30
  3154                           
  3155                           ; Padding undefined space
  3156  300004                     	org	3145732
  3157  300004  FF                 	db	255
  3158                           
  3159                           ;Config register CONFIG3H @ 0x300005
  3160                           ;	unspecified, using default values
  3161                           ;	CCP2 MUX bit
  3162                           ;	CCP2MX = 0x1, unprogrammed default
  3163                           ;	PORTB A/D Enable bit
  3164                           ;	PBADEN = 0x1, unprogrammed default
  3165                           ;	Low-Power Timer1 Oscillator Enable bit
  3166                           ;	LPT1OSC = 0x0, unprogrammed default
  3167                           ;	MCLR Pin Enable bit
  3168                           ;	MCLRE = 0x1, unprogrammed default
  3169  300005                     	org	3145733
  3170  300005  83                 	db	131
  3171                           
  3172                           ;Config register CONFIG4L @ 0x300006
  3173                           ;	unspecified, using default values
  3174                           ;	Stack Full/Underflow Reset Enable bit
  3175                           ;	STVREN = 0x1, unprogrammed default
  3176                           ;	Single-Supply ICSP Enable bit
  3177                           ;	LVP = 0x1, unprogrammed default
  3178                           ;	Extended Instruction Set Enable bit
  3179                           ;	XINST = 0x0, unprogrammed default
  3180                           ;	Background Debugger Enable bit
  3181                           ;	DEBUG = 0x1, unprogrammed default
  3182  300006                     	org	3145734
  3183  300006  85                 	db	133
  3184                           
  3185                           ; Padding undefined space
  3186  300007                     	org	3145735
  3187  300007  FF                 	db	255
  3188                           
  3189                           ;Config register CONFIG5L @ 0x300008
  3190                           ;	unspecified, using default values
  3191                           ;	Code Protection bit
  3192                           ;	CP0 = 0x1, unprogrammed default
  3193                           ;	Code Protection bit
  3194                           ;	CP1 = 0x1, unprogrammed default
  3195                           ;	Code Protection bit
  3196                           ;	CP2 = 0x1, unprogrammed default
  3197                           ;	Code Protection bit
  3198                           ;	CP3 = 0x1, unprogrammed default
  3199  300008                     	org	3145736
  3200  300008  0F                 	db	15
  3201                           
  3202                           ;Config register CONFIG5H @ 0x300009
  3203                           ;	unspecified, using default values
  3204                           ;	Boot Block Code Protection bit
  3205                           ;	CPB = 0x1, unprogrammed default
  3206                           ;	Data EEPROM Code Protection bit
  3207                           ;	CPD = 0x1, unprogrammed default
  3208  300009                     	org	3145737
  3209  300009  C0                 	db	192
  3210                           
  3211                           ;Config register CONFIG6L @ 0x30000A
  3212                           ;	unspecified, using default values
  3213                           ;	Write Protection bit
  3214                           ;	WRT0 = 0x1, unprogrammed default
  3215                           ;	Write Protection bit
  3216                           ;	WRT1 = 0x1, unprogrammed default
  3217                           ;	Write Protection bit
  3218                           ;	WRT2 = 0x1, unprogrammed default
  3219                           ;	Write Protection bit
  3220                           ;	WRT3 = 0x1, unprogrammed default
  3221  30000A                     	org	3145738
  3222  30000A  0F                 	db	15
  3223                           
  3224                           ;Config register CONFIG6H @ 0x30000B
  3225                           ;	unspecified, using default values
  3226                           ;	Configuration Register Write Protection bit
  3227                           ;	WRTC = 0x1, unprogrammed default
  3228                           ;	Boot Block Write Protection bit
  3229                           ;	WRTB = 0x1, unprogrammed default
  3230                           ;	Data EEPROM Write Protection bit
  3231                           ;	WRTD = 0x1, unprogrammed default
  3232  30000B                     	org	3145739
  3233  30000B  E0                 	db	224
  3234                           
  3235                           ;Config register CONFIG7L @ 0x30000C
  3236                           ;	unspecified, using default values
  3237                           ;	Table Read Protection bit
  3238                           ;	EBTR0 = 0x1, unprogrammed default
  3239                           ;	Table Read Protection bit
  3240                           ;	EBTR1 = 0x1, unprogrammed default
  3241                           ;	Table Read Protection bit
  3242                           ;	EBTR2 = 0x1, unprogrammed default
  3243                           ;	Table Read Protection bit
  3244                           ;	EBTR3 = 0x1, unprogrammed default
  3245  30000C                     	org	3145740
  3246  30000C  0F                 	db	15
  3247                           
  3248                           ;Config register CONFIG7H @ 0x30000D
  3249                           ;	unspecified, using default values
  3250                           ;	Boot Block Table Read Protection bit
  3251                           ;	EBTRB = 0x1, unprogrammed default
  3252  30000D                     	org	3145741
  3253  30000D  40                 	db	64
  3254                           tosu	equ	0xFFF
  3255                           tosh	equ	0xFFE
  3256                           tosl	equ	0xFFD
  3257                           stkptr	equ	0xFFC
  3258                           pclatu	equ	0xFFB
  3259                           pclath	equ	0xFFA
  3260                           pcl	equ	0xFF9
  3261                           tblptru	equ	0xFF8
  3262                           tblptrh	equ	0xFF7
  3263                           tblptrl	equ	0xFF6
  3264                           tablat	equ	0xFF5
  3265                           prodh	equ	0xFF4
  3266                           prodl	equ	0xFF3
  3267                           indf0	equ	0xFEF
  3268                           postinc0	equ	0xFEE
  3269                           postdec0	equ	0xFED
  3270                           preinc0	equ	0xFEC
  3271                           plusw0	equ	0xFEB
  3272                           fsr0h	equ	0xFEA
  3273                           fsr0l	equ	0xFE9
  3274                           wreg	equ	0xFE8
  3275                           indf1	equ	0xFE7
  3276                           postinc1	equ	0xFE6
  3277                           postdec1	equ	0xFE5
  3278                           preinc1	equ	0xFE4
  3279                           plusw1	equ	0xFE3
  3280                           fsr1h	equ	0xFE2
  3281                           fsr1l	equ	0xFE1
  3282                           bsr	equ	0xFE0
  3283                           indf2	equ	0xFDF
  3284                           postinc2	equ	0xFDE
  3285                           postdec2	equ	0xFDD
  3286                           preinc2	equ	0xFDC
  3287                           plusw2	equ	0xFDB
  3288                           fsr2h	equ	0xFDA
  3289                           fsr2l	equ	0xFD9
  3290                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        26
    BSS         90
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     46     104
    BANK0           128      0      62
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_SequenceGenerator
    _SequenceGenerator->_rand
    _rand->___lmul

Critical Paths under _isr in COMRAM

    _isr->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1786
                                             44 COMRAM     2     2      0
                  _SequenceGenerator
                         _defeatFunc
                       _receiveInput
                   _selectDifficulty
                              _srand
                            _winFunc
 ---------------------------------------------------------------------------------
 (1) _winFunc                                              4     4      0      15
                                             12 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _srand                                                6     4      2      98
                                             12 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _selectDifficulty                                     2     2      0       0
                                             12 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _receiveInput                                         2     0      2      98
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _defeatFunc                                           2     2      0       0
                                             12 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SequenceGenerator                                   14     8      6    1575
                                             30 COMRAM    14     8      6
                           _delay_ms
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     370
                                             24 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                             12 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             3     1      2     707
                                             12 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0     900
                                              8 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SequenceGenerator
     _delay_ms
     _rand
       ___lmul
   _defeatFunc
   _receiveInput
   _selectDifficulty
   _srand
   _winFunc

 _isr (ROOT)
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      3E       5       48.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2E      68       1       82.5%
BITBIGSFRhllh       27      0       0      21        0.0%
BITBIGSFRhhhhll     18      0       0      17        0.0%
BITBIGSFRhlll        E      0       0      22        0.0%
BITBIGSFRhhhhh       D      0       0      16        0.0%
BITBIGSFRhhl         9      0       0      18        0.0%
BITBIGSFRhlhh        8      0       0      19        0.0%
BITBIGSFRhlhl        2      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A6      23        0.0%
DATA                 0      0      A6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Jul 02 17:21:52 2022

                       l90 0D32                         l87 0D18                         l99 06EE  
                       u90 0C6A                         u91 0C66               ___awdiv@sign 0006  
                      l101 071A                        l102 0746                        l103 0772  
                      l112 0D66                        l106 081E                        l122 0954  
                      l131 08B0                        l124 0A0C                        l133 08F2  
                      l206 0C46                        l118 0CB6                        l207 0C56  
                      l128 0824                        l144 067A                        l137 0946  
                      l129 086E                        l871 0D8C                        l874 0BEC  
                      l970 0C72                        l972 0C74                        l980 0C96  
                      l990 0CAA                        l982 0C9E                        l974 0C76  
                      l966 0C58                        l992 0CAE                        l984 0CA0  
                      l976 0C78                        l968 0C6A                        l994 0CB0  
                      l978 0C7A                        l996 0CB2                        l988 0CA6  
                      l998 0CB4                        u100 0A0C                        u101 0A08  
                      u110 083A                        u111 0836                        u120 087C  
                      u121 0878                        u130 08BE                        u131 08BA  
                      u140 0900                        u141 08FC                        u150 0946  
                      u151 0942                        _PR2 000FCB                        u700 081E  
                      u701 081A                        u710 0D4A                        u711 0D46  
                      u720 0D66                        u721 0D62                        u650 0C0C  
                      u651 0C08                        u660 0C46                        u900 0646  
                      u661 0C42                        u901 0642                        u670 0D32  
                      u671 0D2E                        u680 0BDE                        u690 06E2  
                      u850 0506                        u691 06DE                        u851 0502  
                      u860 0550                        u685 0BD4                        u861 054C  
                      u870 05D0                        u871 05CC                        u880 05E8  
                      u881 05E4                        u890 0612                        u891 060E  
                      _isr 0008                        _now 0043                        _qnt 0045  
             ___awmod@sign 0006                        wreg 000FE8   __end_of_selectDifficulty 0948  
                     l1000 0948                       l1010 097A                       l1002 0956  
                     l1020 09A6                       l1012 097E                       l1004 095E  
                     l1030 09CA                       l1022 09BE                       l1014 0982  
                     l1006 0976                       l1032 09E2                       l1024 09C0  
                     l1016 099A                       l1008 0978                       l1040 09F0  
                     l1050 085C                       l1042 0820                       l1034 09E4  
                     l1026 09C2                       l1018 099C                       l1060 0886  
                     l1052 0860                       l1044 083A                       l1036 09E8  
                     l1028 09C6                       l1070 08C0                       l1062 089E  
                     l1054 0862                       l1046 083C                       l1038 09EC  
                     l1080 0900                       l1072 08C8                       l1064 08A2  
                     l1056 087C                       l1048 0844                       l1090 0928  
                     l1082 0902                       l1074 08E0                       l1066 08A4  
                     l1058 087E                       l1500 0774                       l1084 090A  
                     l1076 08E4                       l1068 08BE                       l1092 0934  
                     l1502 077C                       l1086 0922                       l1078 08E6  
                     l1440 0BEE                       l1512 07AE                       l1504 0788  
                     l1088 0926                       l1450 0CFE                       l1442 0BFE  
                     l1506 078C                       l1514 07FC                       l1522 0D34  
                     l1530 0D68                       l1452 0D02                       l1444 0C0C  
                     l1508 079E                       l1516 0800                       l1524 0D38  
                     l1700 05F4                       l1620 04A4                       l1612 048E  
                     l1454 0D12                       l1446 0C1C                       l1470 06C0  
                     l1462 0682                       l1710 062A                       l1702 05F8  
                     l1630 04BA                       l1622 04AA                       l1614 0496  
                     l1448 0C26                       l1456 0B82                       l1480 0704  
                     l1472 06C4                       l1464 0682                       l1528 0D4E  
                     l1704 05FC                       l1712 0632                       l1640 04E6  
                     l1632 04BC                       l1624 04B4                       l1616 04A0  
                     l1458 0BBE                       l1490 0734                       l1482 0708  
                     l1474 06E2                       l1466 068E                       l1714 0646  
                     l1706 0612                       l1650 04F0                       l1642 04E8  
                     l1634 04BE                       l1626 04B6                       l1618 04A2  
                     l1492 0748                       l1484 071C                       l1476 06F0  
                     l1468 069A                       l1708 0622                       l1660 0526  
                     l1652 04F2                       l1644 04EA                       l1636 04D8  
                     l1628 04B8                       l1494 0750                       l1486 0724  
                     l1478 06F8                       l1670 0532                       l1662 0528  
                     l1654 04F4                       l1646 04EC                       l1638 04E4  
                     l1496 075C                       l1488 0730                       l1680 058A  
                     l1664 052A                       l1656 0506                       l1672 053E  
                     l1648 04EE                       l1498 0760                       l1690 05B6  
                     l1682 0592                       l1674 0550                       l1666 052C  
                     l1658 050E                       l1692 05BE                       l1684 059A  
                     l1676 0566                       l1668 052E                       l1694 05D0  
                     l1686 05A6                       l1678 056E                       l1696 05E8  
                     l1688 05AE                       l1698 05EC                       l1876 07D6  
                     ?_isr 0001                       u1307 08D2                       u1227 0518  
                     u1317 0914                       u1237 055A                       u1327 0C84  
                     u1247 0968                       u1337 0D08                       u1257 098C  
                     u1267 09B0                       u1277 09D4                       u1287 084E  
                     u1297 0890                       _TMR0 000FD6                       _disp 0047  
                     _main 048E                       _rand 0B82                       _seed 0065  
                     fsr2h 000FDA                       indf2 000FDF                       fsr1l 000FE1  
                     fsr2l 000FD9                       btemp 0069                       start 000E  
             ___param_bank 000000                      ??_isr 0009                      ?_main 0001  
                    ?_rand 0019            __end_of___awdiv 0AD2            __end_of___awmod 0B82  
          ___awdiv@divisor 0003                      _T2CON 000FCA                      i2l184 03F0  
                    i2l192 0482                      i2l426 0AD0                      i2l439 0B80  
          ___awdiv@counter 0005                      _TMR0H 000FD7                      _TMR0L 000FD6  
                    _PORTD 000F83                      _TRISA 000F92                      _TRISB 000F93  
                    _TRISC 000F94                      _TRISD 000F95        ___lmul@multiplicand 0011  
                    _delay 0063              _control_input 0061                      _srand 0D68  
                    _start 0031                      tablat 000FF5            __end_of_winFunc 0A0E  
                    ttemp5 006A                      ttemp6 006D                      ttemp7 0071  
                    status 000FD8                      wtemp8 006A            __initialization 0CB8  
             __end_of_main 0682               __end_of_rand 0BEE                     ??_main 002D  
                   ??_rand 001B              __activetblptr 000002                     _ADCON1 000FC1  
                   _CCPR1L 000FBE           ___awdiv@dividend 0001                     ?_srand 000D  
                   i2l1600 0B54                     i2l1602 0B5A                     i2l1540 0A2C  
                   i2l1532 0A0E                     i2l1604 0B60                     i2l1550 0A60  
                   i2l1542 0A3A                     i2l1534 0A12                     i2l1606 0B70  
                   i2l1560 0A9A                     i2l1552 0A68                     i2l1544 0A42  
                   i2l1536 0A20                     i2l1608 0B78                     i2l1800 0270  
                   i2l1720 0032                     i2l1570 0AC0                     i2l1562 0AA2  
                   i2l1554 0A70                     i2l1546 0A46                     i2l1538 0A28  
                   i2l1810 02D2                     i2l1802 0282                     i2l1730 0060  
                   i2l1722 0034                     i2l1572 0AC8                     i2l1564 0AA4  
                   i2l1556 0A7E                     i2l1548 0A4E                     i2l1580 0AE4  
                   i2l1820 0318                     i2l1812 02DA                     i2l1804 0296  
                   i2l1740 00BC                     i2l1732 0078                     i2l1724 0042  
                   i2l1716 001C                     i2l1566 0AAA                     i2l1558 0A84  
                   i2l1590 0B18                     i2l1582 0AEC                     i2l1830 0352  
                   i2l1814 02DE                     i2l1806 02A2                     i2l1822 031C  
                   i2l1750 010C                     i2l1742 00CC                     i2l1734 0094  
                   i2l1726 004A                     i2l1718 002A                     i2l1568 0AB0  
                   i2l1592 0B20                     i2l1584 0AF0                     i2l1576 0AD2  
                   i2l1840 03AA                     i2l1832 0366                     i2l1824 032A  
                   i2l1808 02AC                     i2l1816 02EA                     i2l1752 010E  
                   i2l1760 014A                     i2l1744 00D2                     i2l1736 009C  
                   i2l1728 005C                     i2l1594 0B28                     i2l1586 0AFE  
                   i2l1578 0AD6                     i2l1842 03AE                     i2l1834 037A  
                   i2l1826 033A                     i2l1818 02FC                     i2l1770 019A  
                   i2l1762 015C                     i2l1754 0132                     i2l1746 00E4  
                   i2l1738 00AE                     i2l1850 03F0                     i2l1596 0B36  
                   i2l1588 0B06                     i2l1852 0402                     i2l1860 0438  
                   i2l1836 037C                     i2l1844 03BA                     i2l1828 0340  
                   i2l1780 01DC                     i2l1772 01A0                     i2l1764 0178  
                   i2l1756 013A                     i2l1748 00F8                     i2l1598 0B4C  
                   i2l1862 044A                     i2l1870 0480                     i2l1854 0404  
                   i2l1846 03CC                     i2l1838 03A2                     i2l1790 022C  
                   i2l1782 0202                     i2l1774 01B2                     i2l1758 013E  
                   i2l1766 017C                     i2l1864 044C                     i2l1856 042E  
                   i2l1848 03E8                     i2l1792 0248                     i2l1784 020A  
                   i2l1776 01C6                     i2l1768 018A                     i2l1866 0476  
                   i2l1858 0430                     i2l1786 020E                     i2l1778 01DA  
                   i2l1794 024C                     i2l1868 0478                     i2l1796 025A  
                   i2l1788 021A                     i2l1798 026A           __end_of_delay_ms 0D34  
     delay_ms@milliseconds 000D                     ___lmul 0BEE                  ??___awdiv 0005  
                ??___awmod 0005                     clear_0 0CDE                     clear_1 0CEA  
                   _on_red 003B           ___awdiv@quotient 0007            ___awmod@divisor 0003  
                   isa$std 000001            ___awmod@counter 0005               __pdataCOMRAM 004B  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
                   srand@s 000D                  ??_winFunc 000D              ?_receiveInput 000D  
               __accesstop 0080    __end_of__initialization 0CF0              ___rparam_used 000001  
           __pcstackCOMRAM 0001              __end_of_srand 0D8E          ?_selectDifficulty 0001  
                  ??_srand 000F                 _defeatFunc 0C58             ??_receiveInput 000F  
               __pbssBANK0 0080         ??_selectDifficulty 000D                 __pnvCOMRAM 0065  
                  ?___lmul 000D             ___lmul@product 0015                  ?_delay_ms 000D  
                  i2u80_40 0AFE                    i2u80_41 0AFA                    i2u73_40 0A20  
                  i2u81_40 0B18                    i2u73_41 0A1C                    i2u81_41 0B14  
                  i2u74_40 0A3A                    i2u82_40 0B36                    i2u74_41 0A36  
                  i2u82_41 0B32                    i2u75_40 0A60                    i2u83_40 0B4C  
                  i2u91_40 002A                    i2u75_41 0A5C                    i2u83_41 0B48  
                  i2u91_41 0026                    i2u76_40 0A7E                    i2u84_40 0B70  
                  i2u92_40 0042                    i2u76_41 0A7A                    i2u84_41 0B6C  
                  i2u92_41 003E                    i2u77_40 0A9A                    i2u93_40 005C  
                  i2u77_41 0A96                    i2u93_41 0058                    i2u78_40 0AC0  
                  i2u94_40 0078                    i2u78_41 0ABC                    i2u94_41 0074  
                  i2u79_40 0AE4                    i2u95_40 00AE                    i2u79_41 0AE0  
                  i2u95_41 00AA                    i2u96_40 00BC                    i2u96_41 00B8  
                  i2u97_40 00E4                    i2u97_41 00E0                    i2u98_40 00F8  
                  i2u98_41 00F4                    i2u99_40 0132                    i2u99_41 012E  
                  __Hparam 0000                    __Lparam 0000                    ___awdiv 0A0E  
                  ___awmod 0AD2                    __pcinit 0CB8                    __ramtop 0600  
                  __ptext0 048E                    __ptext1 0948                    __ptext2 0D68  
                  __ptext3 0820                    __ptext4 0D34                    __ptext5 0C58  
                  __ptext6 0682                    __ptext7 0B82                    __ptext8 0BEE  
                  __ptext9 0CFE                  _T0CONbits 000FD5           ___awmod@dividend 0001  
                  _on_blue 0041                 ??_delay_ms 000F                    _winFunc 0948  
                  _qnt_max 005F             __pintcode_body 0012                ?_defeatFunc 0001  
     end_of_initialization 0CF0              __Lmediumconst 0000                    int_func 0012  
   SequenceGenerator@delay 0023                    postdec1 000FE5                    postdec2 000FDD  
   SequenceGenerator@start 001F                    postinc0 000FEE                    postinc2 000FDE  
               _wait_timer 002F       __end_of_receiveInput 0D68                  _PORTAbits 000F80  
                _PORTBbits 000F81                  _PORTCbits 000F82                _CCP1CONbits 000FBD  
          receiveInput@qnt 000D             __end_of___lmul 0C58              __pidataCOMRAM 0D8E  
      start_initialization 0CB8                __end_of_isr 048E                   ??___lmul 0015  
     SequenceGenerator@qnt 0021                __pbssCOMRAM 002F            _status_response 0033  
       SequenceGenerator@i 0029         SequenceGenerator@j 002B         SequenceGenerator@r 0027  
                __pintcode 0008                   ?___awdiv 0001                   ?___awmod 0001  
                _dispValue 0049                   ?_winFunc 0001               ??_defeatFunc 000D  
             _receiveInput 0D34                  _on_yellow 003F                   i2u100_40 015C  
                 i2u100_41 0158                   i2u101_40 0178                   i2u101_41 0174  
                 i2u110_40 0296                   i2u102_40 018A                   i2u110_41 0292  
                 i2u102_41 0186                   i2u111_40 02D2                   i2u103_40 01B2  
                 i2u111_41 02CE                   i2u103_41 01AE                   i2u120_40 0402  
                 i2u112_40 02FC                   i2u104_40 01C6                   i2u120_41 03FE  
                 i2u112_41 02F8                   i2u104_41 01C2                   i2u121_40 044A  
                 i2u113_40 0318                   i2u105_40 0202                   i2u121_41 0446  
                 i2u113_41 0314                   i2u105_41 01FE                   i2u114_40 032A  
                 i2u106_40 022C                   i2u114_41 0326                   i2u106_41 0228  
                 i2u115_40 0352                   i2u107_40 0248                   i2u115_41 034E  
                 i2u107_41 0244                   i2u116_40 0366                   i2u108_40 025A  
                 i2u116_41 0362                   i2u108_41 0256                   i2u117_40 03A2  
                 i2u109_40 0282                   i2u117_41 039E                   i2u109_41 027E  
                 i2u118_40 03CC                   i2u118_41 03C8                   i2u119_40 03E8  
                 i2u119_41 03E4         __end_of_defeatFunc 0CB8          _SequenceGenerator 0682  
       ?_SequenceGenerator 001F          ___lmul@multiplier 000D                _INTCON2bits 000FF1  
              _INTCON3bits 000FF0                  copy_data0 0CCC        ??_SequenceGenerator 0025  
              _count_timer 0037                _index_input 0035                   __Hrparam 0000  
                 __Lrparam 0000           _selectDifficulty 0820  __end_of_SequenceGenerator 0820  
                 _delay_ms 0CFE                   __ptext11 0AD2                   __ptext12 0A0E  
                 _on_green 003D                   isa$xinst 000000                   _sequence 0080  
                 int$flags 0069                 _INTCONbits 000FF2                _its_waiting 0039  
                 intlevel2 0000                   winFunc@i 000F              _displayNumber 004B  
